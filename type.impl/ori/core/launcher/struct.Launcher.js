(function() {var type_impls = {
"ori":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Launcher%3CT,+S%3E\" class=\"impl\"><a href=\"#impl-Launcher%3CT,+S%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"struct\" href=\"ori/core/launcher/struct.Launcher.html\" title=\"struct ori::core::launcher::Launcher\">Launcher</a>&lt;T, S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"ori/core/shell/trait.Shell.html\" title=\"trait ori::core::shell::Shell\">Shell</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"ori/core/launcher/struct.Launcher.html#tymethod.new\" class=\"fn\">new</a>(data: T) -&gt; <a class=\"struct\" href=\"ori/core/launcher/struct.Launcher.html\" title=\"struct ori::core::launcher::Launcher\">Launcher</a>&lt;T, S&gt;</h4></section></summary><div class=\"docblock\"><p>Crate a new application.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shell\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"ori/core/launcher/struct.Launcher.html#tymethod.shell\" class=\"fn\">shell</a>(self, f: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;mut S</a>)) -&gt; <a class=\"struct\" href=\"ori/core/launcher/struct.Launcher.html\" title=\"struct ori::core::launcher::Launcher\">Launcher</a>&lt;T, S&gt;</h4></section></summary><div class=\"docblock\"><p>Access the shell of the application, by running a closure.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.debug\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"ori/core/launcher/struct.Launcher.html#tymethod.debug\" class=\"fn\">debug</a>(self, debug: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"struct\" href=\"ori/core/launcher/struct.Launcher.html\" title=\"struct ori::core::launcher::Launcher\">Launcher</a>&lt;T, S&gt;</h4></section></summary><div class=\"docblock\"><p>Set the debug mode of the application.</p>\n<p>This is be default set to <code>cfg!(debug_assertions)</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.style\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"ori/core/launcher/struct.Launcher.html#tymethod.style\" class=\"fn\">style</a>(self, style: impl <a class=\"trait\" href=\"ori/core/style/trait.Style.html\" title=\"trait ori::core::style::Style\">Style</a>) -&gt; <a class=\"struct\" href=\"ori/core/launcher/struct.Launcher.html\" title=\"struct ori::core::launcher::Launcher\">Launcher</a>&lt;T, S&gt;</h4></section></summary><div class=\"docblock\"><p>Append the style of the application.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_style\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"ori/core/launcher/struct.Launcher.html#tymethod.build_style\" class=\"fn\">build_style</a>&lt;U&gt;(\n    self,\n    style: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(&amp;<a class=\"struct\" href=\"ori/prelude/struct.Styles.html\" title=\"struct ori::prelude::Styles\">Styles</a>) -&gt; U + 'static\n) -&gt; <a class=\"struct\" href=\"ori/core/launcher/struct.Launcher.html\" title=\"struct ori::core::launcher::Launcher\">Launcher</a>&lt;T, S&gt;<div class=\"where\">where\n    U: 'static,</div></h4></section></summary><div class=\"docblock\"><p>Build the style of the application.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.font\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"ori/core/launcher/struct.Launcher.html#tymethod.font\" class=\"fn\">font</a>(self, font: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"enum\" href=\"ori/prelude/enum.FontSource.html\" title=\"enum ori::prelude::FontSource\">FontSource</a>&gt;) -&gt; <a class=\"struct\" href=\"ori/core/launcher/struct.Launcher.html\" title=\"struct ori::core::launcher::Launcher\">Launcher</a>&lt;T, S&gt;</h4></section></summary><div class=\"docblock\"><p>Load a font from a <a href=\"ori/prelude/enum.FontSource.html\" title=\"enum ori::prelude::FontSource\"><code>FontSource</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.proxy\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"ori/core/launcher/struct.Launcher.html#tymethod.proxy\" class=\"fn\">proxy</a>(&amp;self) -&gt; <a class=\"struct\" href=\"ori/prelude/struct.CommandProxy.html\" title=\"struct ori::prelude::CommandProxy\">CommandProxy</a></h4></section></summary><div class=\"docblock\"><p>Get the command proxy of the application.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_proxy\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"ori/core/launcher/struct.Launcher.html#tymethod.with_proxy\" class=\"fn\">with_proxy</a>(self, f: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"struct\" href=\"ori/prelude/struct.CommandProxy.html\" title=\"struct ori::prelude::CommandProxy\">CommandProxy</a>)) -&gt; <a class=\"struct\" href=\"ori/core/launcher/struct.Launcher.html\" title=\"struct ori::core::launcher::Launcher\">Launcher</a>&lt;T, S&gt;</h4></section></summary><div class=\"docblock\"><p>Set the proxy of the application.</p>\n<p>This is useful when starting background tasks.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.delegate\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"ori/core/launcher/struct.Launcher.html#tymethod.delegate\" class=\"fn\">delegate</a>(self, delegate: impl <a class=\"trait\" href=\"ori/prelude/trait.Delegate.html\" title=\"trait ori::prelude::Delegate\">Delegate</a>&lt;T&gt; + 'static) -&gt; <a class=\"struct\" href=\"ori/core/launcher/struct.Launcher.html\" title=\"struct ori::core::launcher::Launcher\">Launcher</a>&lt;T, S&gt;</h4></section></summary><div class=\"docblock\"><p>Push a delegate to the application.</p>\n<p>Delegates are called in order of insertion.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.delegate_with_proxy\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"ori/core/launcher/struct.Launcher.html#tymethod.delegate_with_proxy\" class=\"fn\">delegate_with_proxy</a>&lt;D&gt;(\n    self,\n    delegate: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"struct\" href=\"ori/prelude/struct.CommandProxy.html\" title=\"struct ori::prelude::CommandProxy\">CommandProxy</a>) -&gt; D\n) -&gt; <a class=\"struct\" href=\"ori/core/launcher/struct.Launcher.html\" title=\"struct ori::core::launcher::Launcher\">Launcher</a>&lt;T, S&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"ori/prelude/trait.Delegate.html\" title=\"trait ori::prelude::Delegate\">Delegate</a>&lt;T&gt; + 'static,</div></h4></section></summary><div class=\"docblock\"><p>Set the delegate of the application with a proxy.</p>\n<p>This is useful when starting background tasks.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.window\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"ori/core/launcher/struct.Launcher.html#tymethod.window\" class=\"fn\">window</a>&lt;V&gt;(\n    self,\n    descriptor: <a class=\"struct\" href=\"ori/prelude/struct.WindowDescriptor.html\" title=\"struct ori::prelude::WindowDescriptor\">WindowDescriptor</a>,\n    ui: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;mut T</a>) -&gt; V + 'static\n) -&gt; <a class=\"struct\" href=\"ori/core/launcher/struct.Launcher.html\" title=\"struct ori::core::launcher::Launcher\">Launcher</a>&lt;T, S&gt;<div class=\"where\">where\n    V: <a class=\"trait\" href=\"ori/prelude/trait.View.html\" title=\"trait ori::prelude::View\">View</a>&lt;T&gt; + 'static,</div></h4></section></summary><div class=\"docblock\"><p>Push a window to the application.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_launch\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"ori/core/launcher/struct.Launcher.html#tymethod.try_launch\" class=\"fn\">try_launch</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.unit.html\">()</a>, &lt;S as <a class=\"trait\" href=\"ori/core/shell/trait.Shell.html\" title=\"trait ori::core::shell::Shell\">Shell</a>&gt;::<a class=\"associatedtype\" href=\"ori/core/shell/trait.Shell.html#associatedtype.Error\" title=\"type ori::core::shell::Shell::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to launch the application.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.launch\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"ori/core/launcher/struct.Launcher.html#tymethod.launch\" class=\"fn\">launch</a>(self)</h4></section></summary><div class=\"docblock\"><p>Launch the application.</p>\n</div></details></div></details>",0,"ori::prelude::Launcher"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()