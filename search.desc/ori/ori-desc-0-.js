searchState.loadedDescShard("ori", 0, "Ori\nOri <code>core</code> module.\nLaunch an Ori application.\nLaunch an Ori simple application.\nA macro to generate boilerplate for the <code>main</code> function.\nConvenient imports for Ori.\nA macro to generate boilerplate for a hot-reloadable …\nCanvas module.\nClipboard.\nA channel for sending commands to the user interface.\nContexts for views.\nEvents and event handling.\nCreate a formatted <code>Text</code>.\nCreate a horizontal <code>Stack</code>.\nCreate a horizontal <code>Wrap</code>.\nImage data and processing.\nLayout of <code>View</code>s.\nConvenient imports for Ori.\nRebuild trait and derive macro.\nStyleing and theming.\nText rendering and layouting.\nTransition utilities.\nView module.\nThe builtin views in Ori.\nCreate a vertical <code>Stack</code>.\nCreate a vertical <code>Wrap</code>.\nWindowing system abstraction layer.\nCreate a new <code>ZStack</code> view.\nThe lines are joined with a beveled corner.\nWays to blend two colors.\nRadi of the corners on a rounded rectangle.\nThe border width of a rounded rectangle.\nThe end of the line is squared off.\nA canvas that can be drawn on.\nA canvas that can be drawn on.\nReplaces the destination with zero.\nA close verb.\nClose the curve.\nA color with red, green, blue and alpha components.\nA cubic verb.\nCubic bezier curve to a point.\nA bezier curve.\nAn iterator over the segments of a curve.\nA segment of a curve.\nA verb that describes the type of curve.\nPreserves the destination.\nDestination over source.\nA type for displaying a color as a hex string.\nA point is inside the shape if a ray from the point …\nA filled curve.\nRule determining if a point is inside a shape.\nA layer that can be transformed and masked.\nA line verb.\nLine to a point.\nWays to draw the end of a line.\nWays to join two lines.\nA mask that can be used to clip a layer.\nThe lines are joined with a sharp corner.\nA move verb.\nMove to a point.\nA point is inside the shape if a ray from the point …\nA paint that can be used to fill or stroke a shape.\nA pattern that can be used to fill a shape.\nA pattern.\nA primitive that can be drawn on a canvas.\nA quad verb.\nQuadratic bezier curve to a point.\nThe end of the line is rounded.\nThe lines are joined with a rounded corner.\nWays to fill a shape.\nA solid color.\nReplaces the destination with the source.\nSource over destination.\nThe end of the line is squared off and extends past the …\nProperties of a stroke.\nA stroked curve.\nThe alpha component of the color.\nWhether the paint should be anti-aliased.\nThe blue component of the color.\nThe blend mode of the paint.\nThe bottom border width.\nThe bottom left corner radius.\nThe bottom right corner radius.\nThe cap of the stroke.\nCount the number of primitives.\nThe curve of the mask.\nThe fill rule of the mask.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe green component of the color.\nCreate a new color, with the given hex string.\nCreate a new color, with the given <code>hue</code>, <code>saturation</code> and …\nCreate a new color, with the given <code>hue</code>, <code>saturation</code>, …\nCreate a new color, with the given <code>hue</code>, <code>saturation</code> and …\nCreate a new color, with the given <code>hue</code>, <code>saturation</code>, <code>value</code> …\nThe image of the pattern.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe join of the stroke.\nThe left border width.\nThe miter limit of the stroke.\nCreate a new canvas diff.\nCreate a new hex color display with the given <code>red</code>, <code>green</code>, …\nCreate a new color, with the given <code>hue</code>, <code>saturation</code> and …\nCreate a new color, with the given <code>hue</code>, <code>saturation</code>, …\nCreate a new color, with the given <code>hue</code>, <code>saturation</code> and …\nCreate a new color, with the given <code>hue</code>, <code>saturation</code>, <code>value</code> …\nCreate a new color, with the given <code>lightness</code>, <code>a</code> and <code>b</code> …\nCreate a new color, with the given <code>lightness</code>, <code>a</code>, <code>b</code> and …\nCreate a new color, with the given <code>lightness</code>, <code>chroma</code> and …\nCreate a new color, with the given <code>lightness</code>, <code>chroma</code>, <code>hue</code> …\nThe opacity of the pattern.\nGet the number of points for the verb.\nThe red component of the color.\nGet the rects of the diff.\nCreate a new color, with the given <code>red</code>, <code>green</code> and <code>blue</code> …\nCreate a new color, with the given <code>red</code>, <code>green</code>, <code>blue</code> and …\nThe right border width.\nThe shader of the paint.\nSimplify the diff by merging rects when it makes sense.\nThe top border width.\nThe top left corner radius.\nThe top right corner radius.\nThe transformation of the pattern.\nUpdate the diff with new and old canvases.\nThe width of the stroke.\nThe curve to draw.\nThe curve to draw.\nThe fill rule of the curve.\nThe mask of the layer.\nThe paint to fill the curve with.\nThe paint to stroke the curve with.\nThe primitives of the layer.\nThe stroke properties of the curve.\nThe transformation of the layer.\nThe view of the layer.\nA clipboard.\nA clipboard backend.\nGet the clipboard text.\nSet the clipboard text.\nA command.\nA clonable channel for sending <code>Command</code>s.\nA receiver for <code>Command</code>s.\nA waker for the event loop, triggered when a command is …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nTry to downcast the command to <code>T</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCheck whether the command is of type <code>T</code>.\nGet the name of the command.\nCreate a new <code>CommandWaker</code>.\nCreate a new command.\nConvert the command into a boxed <code>Any</code> value.\nTry receive a command.\nWake the event loop.\nA base context that is shared between all other contexts.\nA context for building the view tree.\nA context for a view.\nA context for drawing the view tree.\nA context for handling events.\nA context for laying out the view tree.\nA context for rebuilding the view tree.\nGet the <code>Clipboard</code>.\nEmit a command.\nSpawn a future sending a command when it completes.\nCheck if the context is present.\nCheck if a context is contained.\nGet a context.\nGet a mutable context.\nGet a context or insert a <code>default</code>.\nGet a reference to the <code>Contexts</code>.\nGet a mutable reference to the <code>Contexts</code>.\nGet the <code>Fonts</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a context.\nGet a context.\nGet a mutable context.\nGet a mutable context.\nGet a context or insert a <code>default</code>.\nPush a context.\nInsert a context.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCheck if there are no contexts.\nGet the number of contexts.\nCreate a new base context.\nCreate a new context.\nGet the <code>CommandProxy</code>.\nPop a context.\nRemove a context.\nSpawn a future.\nAn animation frame has passed.\nThe back button.\nEvent emitted when a window wants to close.\nThe window requested to be close.\nA keyboard key.\nA command was sent.\nAn event that can be sent to a view.\nThe forward button.\nAn event fired when a key is pressed.\nA keyboard key was pressed.\nAn event fired when a key is released.\nA keyboard key was released.\nModifiers for keyboard and pointer events.\nOther buttons.\nA pointer button.\nA unique pointer id.\nA pointer left the window.\nA pointer left the window.\nA pointer was moved.\nA pointer moved.\nA pointer button was pressed.\nA pointer button was pressed.\nA pointer button was released.\nA pointer button was released.\nA pointer wheel was scrolled.\nA pointer was scrolled.\nThe primary button, usually the left mouse button or the …\nThe secondary button, usually the right mouse button.\nThe tertiary button, usually the middle mouse button.\nView state needs to be updated.\nEvent emitted when a window is resized.\nThe window was resized.\nEvent emitted when a window is scaled.\nThe window was scaled.\nWhether the alt key is held down.\nThe button of the pointer.\nThe button of the pointer.\nWhether the button was clicked.\nThe key that was pressed or released.\nThe key that was pressed or released.\nWhether the control key is held down.\nThe delta of the pointer.\nThe delta of the pointer.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe new height of the window.\nThe unique id of the pointer.\nThe unique id of the pointer.\nThe unique id of the pointer.\nThe unique id of the pointer.\nThe unique id of the pointer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCheck if the <code>key</code> is released.\nWhether the meta key is held down.\nThe modifiers that were active.\nThe modifiers that were active.\nThe modifiers of the pointer.\nThe modifiers of the pointer.\nThe modifiers of the pointer.\nThe modifiers of the pointer.\nThe position of the pointer.\nThe position of the pointer.\nThe position of the pointer.\nThe position of the pointer.\nThe new scale factor of the window.\nWhether the shift key is held down.\nGet the new size of the window.\nThe text that was entered.\nThe new width of the window.\nThe window that wants to close.\nThe window that was resized.\nThe window that was scaled.\nA texture managed by the rendering backend.\nAn clonable image.\nAn <code>Image</code> texture.\nImage data.\nA unique identifier for an <code>Image</code>.\nA texture.\nAn opaque backend texture identifier.\nA weak reference to an <code>Image</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate a new <code>TextureId</code> from an index.\nGet the <code>ImageId</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new <code>TextureId</code>.\nGet the number of strong references to the image.\nConvert the <code>TextureId</code> to an index.\nGet the number of weak references to the image.\nAn affine transformation in 2 dimensional space.\nThe alignment of items along the cross axis.\nAlignment of content inside a container.\nAn axis is a direction in which a layout is applied.\nItems are packed toward the center of the stack.\nItems are packed toward the center of the stack.\nItems are packed toward the end of the stack.\nItems are packed toward the end of the stack.\nA constant used to indicate that a dimension should fill …\nThe horizontal axis.\nThe justify content of a stack container.\nAn iterator over the positions of items in a stack …\nA 2x2 matrix.\nA padding of a rectangle.\nA point in 2D space.\nA rectangle defined by its minimum and maximum points.\nA 2 dimensional size.\nSpace available to lay out a view.\nItems are evenly distributed in the stack, with half-size …\nItems are evenly distributed in the stack, with equal-size …\nItems are evenly distributed in the stack.\nItems are packed toward the start of the stack.\nItems are packed toward the start of the stack.\nItems are stretched to fill the stack.\nA 2D vector.\nThe vertical axis.\nThe bottom padding.\nReturns the argument unchanged.\nThe height.\nCalls <code>U::from(self)</code>.\nThe left padding.\nThe matrix of the affine transformation.\nThe maximum point of the rectangle.\nMaximum size the view can be.\nThe minimum point of the rectangle.\nMinimum size the view can be.\nThe right padding.\nThe top padding.\nThe translation of the affine transformation.\nThe width.\nThe horizontal alignment.\nThe x axis of the matrix.\nThe x coordinate.\nThe x coordinate.\nThe vertical alignment.\nThe y axis of the matrix.\nThe y coordinate.\nThe y coordinate.\nTrait implemented by callsites.\nThe “debug” level.\n<code>Dispatch</code> trace data to a <code>Subscriber</code>.\nThe “error” level.\n<code>Event</code>s represent single points in time where something …\nThe “info” level.\nIdentifies a span within the context of a subscriber.\nAttaches spans to a <code>std::future::Future</code>.\nDescribes the level of verbosity of a span or event.\nMetadata describing a span or event.\nA handle representing a span, with the capability to enter …\nTrait representing the functions required to collect trace …\nThe “trace” level.\nA field value of an erased type.\nThe “warn” level.\nReturns the string representation of the <code>Level</code>.\nCallsites represent the source locations from which spans …\nReturns an opaque <code>Identifier</code> that uniquely identifies the …\nConstructs a new <code>Span</code> as child of the given parent span, …\nNotifies the subscriber that a span ID has been cloned.\nNotifies the subscriber that a span ID has been cloned.\nReturns a handle to the span considered by the <code>Subscriber</code> …\nReturns a type representing this subscriber’s view of …\nReturns a type representing this subscriber’s view of …\nConstructs an event at the debug level.\nConstructs a span at the debug level.\nReturns the current default dispatcher\nDispatches trace events to <code>Subscriber</code>s.\nIf <code>self</code> is the same type as the provided <code>TypeId</code>, returns …\nReturns some reference to this <code>Subscriber</code> value if it is …\nReturns some reference to this <code>Subscriber</code> value if it is …\nReturns some reference to this <code>[</code>Subscriber…\nReturns some reference to this <code>Subscriber</code> value if it is …\nReturns some reference to the <code>Subscriber</code> this <code>Dispatch</code> …\nCreates a <code>WeakDispatch</code> from this <code>Dispatch</code>.\n<strong>This method is deprecated.</strong>\nNotifies the subscriber that a span ID has been dropped.\nReturns true if a span or event with the specified metadata…\nReturns true if a span with the specified metadata would be\nChecks whether a span or event is enabled based on the …\nRecords that a span has been entered.\nEnters this span, returning a guard that will exit the …\nRecords that a span has been can_enter.\nEnters this span, consuming it and returning a guard that …\nConstructs an event at the error level.\nConstructs a span at the error level.\nEvents represent single points in time during the …\nRecords that an <code>Event</code> has occurred.\nRecords that an <code>Event</code> has occurred.\nConstructs a new <code>Event</code>.\nDetermine if an <code>Event</code> should be recorded.\nTests whether an event with the specified level and target …\nRecords that a span has been exited.\nRecords that a span has been exited.\n<code>Span</code> and <code>Event</code> key-value data.\nReturns a <code>Field</code> for the field with the given <code>name</code>, if one …\nReturns the names of the fields on the described span or …\nReturns the name of the source code file where the span …\nIndicates that the span with the given ID has an indirect …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConstructs a new span ID from the given <code>NonZeroU64</code>.\nConstructs a new span ID from the given <code>u64</code>.\nReturns true if this <code>Span</code> has a field for the given <code>Field</code> …\nReturns this span’s <code>Id</code>, if it is enabled.\nInstruments this type with the current <code>Span</code>, returning an …\nExecutes the given function in the context of this span.\nConstructs an event at the info level.\nConstructs a span at the info level.\nAttach a span to a <code>std::future::Future</code>.\nInstruments this type with the provided <code>Span</code>, returning an …\nInstruments a function to create and enter a <code>tracing</code> span …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the span’s ID as a <code>NonZeroU64</code>.\nReturns the span’s ID as a <code>u64</code>.\nReturns <code>true</code> if this <code>Subscriber</code> is the same type as <code>T</code>.\nReturns <code>true</code> if this <code>Subscriber</code> is the same type as <code>T</code>.\nReturns <code>true</code> if this <code>Subscriber</code> is the same type as <code>T</code>.\nReturns <code>true</code> if this <code>Subscriber</code> is the same type as <code>T</code>.\nReturns <code>true</code> if this <code>Dispatch</code> forwards to a <code>Subscriber</code> of …\nReturns <code>true</code> if this span was disabled by the subscriber …\nReturns true if the callsite kind is <code>Event</code>.\nReturns <code>true</code> if this span was constructed by <code>Span::none</code> …\nReturn true if the callsite kind is <code>Span</code>.\nReturns the level of verbosity of the described span or …\nTrace verbosity level filtering.\nReturns the line number in the source code file where the …\nReturns the highest verbosity level that this <code>Subscriber</code> …\nMetadata describing trace data.\nReturns the metadata associated with the callsite.\nReturns this span’s <code>Metadata</code>, if it is enabled.\nStatically constructs new span metadata.\nReturns the path to the Rust module where the span …\nReturns the name of the span.\nConstructs a new <code>Span</code> with the given metadata and set of …\nConstruct new metadata for a span or event, with a name, …\nReturns a <code>Dispatch</code> that forwards to the given <code>Subscriber</code>.\nConstructs a new disabled span with the given <code>Metadata</code>.\nConstructs a new <code>Span</code> as the root of its own trace tree, …\nVisit the construction of a new span, returning a new span …\nRecord the construction of a new span, returning a new ID …\nConstructs a new span that is <em>completely disabled</em>.\nReturns a new <code>Dispatch</code> that discards events and spans.\nInvoked when this subscriber becomes a <code>Dispatch</code>.\nReturns this span, if it was enabled by the current …\nVisits this value with the given <code>Visitor</code>.\nRecord a set of values on a span.\nRecords that the field described by <code>field</code> has the value …\nRecord a set of values on a span.\nRecords all the fields in the provided <code>ValueSet</code>.\nAdds an indication that <code>span</code> follows from the span with …\nAdds an indication that <code>span</code> follows from the span with …\nRegisters a new callsite with this subscriber, returning …\nRegisters a new callsite with this subscriber, returning …\nSets the <code>Interest</code> for this callsite.\nSpans represent periods of time in which a program was …\nConstructs a new span.\nTests whether a span with the specified level and target …\nCollects and records trace data.\nReturns a string describing the part of the system where …\nConstructs an event at the trace level.\nConstructs a span at the trace level.\nNotifies the subscriber that a span ID has been dropped, …\nNotifies the subscriber that a span ID has been dropped, …\nConstructs an event at the warn level.\nConstructs a span at the warn level.\nInvokes a function with a reference to this span’s ID …\nTrait implemented by callsites.\nA default <code>Callsite</code> implementation.\nUniquely identifies a <code>Callsite</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the callsite’s cached <code>Interest</code>, or registers it …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the metadata associated with the callsite.\nReturns a new <code>DefaultCallsite</code> with the specified <code>Metadata</code>.\nClear and reregister interest on every <code>Callsite</code>\nRegister a new <code>Callsite</code> with the global registry.\nRegisters this callsite with the global callsite registry.\nSets the <code>Interest</code> for this callsite.\nA guard that resets the current default dispatcher to the …\n<code>Dispatch</code> trace data to a <code>Subscriber</code>.\nReturned if setting the global dispatcher fails.\n<code>WeakDispatch</code> is a version of <code>Dispatch</code> that holds a …\nReturns the argument unchanged.\nExecutes a closure with a reference to this thread’s …\nCalls <code>U::from(self)</code>.\nSets the dispatch as the default dispatch for the duration …\nSets this dispatch as the global default for the duration …\nAttempts to upgrade this <code>WeakDispatch</code> to a <code>Dispatch</code>.\nSets this dispatch as the default for the duration of a …\n<code>Event</code>s represent single points in time where something …\nConstructs a new <code>Event</code> with the specified metadata and set …\nConstructs a new <code>Event</code> with the specified metadata and set …\nReturns an iterator over the set of values on this <code>Event</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns true if the new event’s parent should be …\nReturns true if the new event should be a root.\nReturns metadata describing this <code>Event</code>.\nReturns a new <code>Event</code> in the current span, with the …\nReturns a new <code>Event</code> as a child of the specified span, with …\nReturns the new event’s explicitly-specified parent, if …\nVisits all the fields on this <code>Event</code> with the specified …\nTrait implemented to allow a type to be used as a field …\nA <code>Value</code> which serializes as a string using <code>fmt::Debug</code>.\nA <code>Value</code> which serializes using <code>fmt::Display</code>.\nAn empty field.\nAn opaque key allowing <em>O</em>(1) access to a field in a <code>Span</code>’…\nDescribes the fields present on a span.\nAn iterator over a set of fields.\nA field value of an erased type.\nA set of fields and values for a span.\nVisits typed values.\nAttempts to convert <code>&amp;self</code> into a <code>Field</code> with the specified …\nReturns an <code>Identifier</code> that uniquely identifies the <code>Callsite</code>\nReturns an <code>Identifier</code> that uniquely identifies the <code>Callsite</code>\nReturns <code>true</code> if <code>self</code> contains the given <code>field</code>.\nWraps a type implementing <code>fmt::Debug</code> as a <code>Value</code> that can be\nWraps a type implementing <code>fmt::Display</code> as a <code>Value</code> that can …\nReturns the <code>Field</code> named <code>name</code>, or <code>None</code> if no such field …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns whether or not this <code>FieldSet</code> has fields.\nReturns true if this <code>ValueSet</code> contains <em>no</em> values.\nReturns an iterator over the <code>Field</code>s in this <code>FieldSet</code>.\nReturns the number of fields in this <code>FieldSet</code>.\nReturns the number of fields in this <code>ValueSet</code> that would …\nReturns a string representing the name of the field.\nConstructs a new <code>FieldSet</code> with the given array of field …\nVisits this value with the given <code>Visitor</code>.\nVisits all the fields in this <code>ValueSet</code> with the provided …\nVisit a boolean value.\nVisit a value implementing <code>fmt::Debug</code>.\nRecords a type implementing <code>Error</code>.\nVisit a double-precision floating point value.\nVisit a signed 128-bit integer value.\nVisit a signed 64-bit integer value.\nVisit a string value.\nVisit an unsigned 128-bit integer value.\nVisit an unsigned 64-bit integer value.\nAttaches spans to a <code>std::future::Future</code>.\nA <code>Future</code> that has been instrumented with a <code>tracing</code> <code>Span</code>.\nA <code>Future</code> that has been instrumented with a <code>tracing</code> …\nExtension trait allowing futures to be instrumented with a …\nBorrows the <code>Dispatch</code> that is entered when this type is …\nReturns the argument unchanged.\nReturns the argument unchanged.\nInstruments this type with the current <code>Span</code>, returning an …\nBorrows the wrapped type.\nBorrows the wrapped type.\nMutably borrows the wrapped type.\nMutably borrows the wrapped type.\nGet a pinned mutable reference to the wrapped type.\nGet a pinned mutable reference to the wrapped type.\nGet a pinned reference to the wrapped type.\nGet a pinned reference to the wrapped type.\nInstruments this type with the provided <code>Span</code>, returning an …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConsumes the <code>Instrumented</code>, returning the wrapped type.\nConsumes the <code>Instrumented</code>, returning the wrapped type.\nBorrows the <code>Span</code> that this type is instrumented by.\nMutably borrows the <code>Span</code> that this type is instrumented by.\nAttaches the current default <code>Subscriber</code> to this type, …\nAttaches the provided <code>Subscriber</code> to this type, returning a …\nA filter comparable to a verbosity <code>Level</code>.\nIndicates that a string could not be parsed to a valid …\nThe statically configured maximum trace level.\nThe “debug” level.\nThe “error” level.\n<code>Event</code> callsite\n<code>enabled!</code> callsite. <code>Subscriber</code>s can assume this <code>Kind</code> means …\nThe “info” level.\nIndicates whether the callsite is a span or event.\nDescribes the level of verbosity of a span or event.\nA filter comparable to a verbosity <code>Level</code>.\nMetadata describing a span or event.\nThe “off” level.\nReturned if parsing a <code>Level</code> fails.\nIndicates that a string could not be parsed to a valid …\n<code>Span</code> callsite\nThe “trace” level.\nThe “warn” level.\nReturns a <code>LevelFilter</code> that matches the most verbose <code>Level</code> …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns a <code>LevelFilter</code> that enables spans and events with …\nSets that this <code>Kind</code> is a hint.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the most verbose <code>Level</code> that this filter accepts, …\nReturn true if the callsite kind is <code>Event</code>\nReturn true if the callsite kind is <code>Hint</code>\nReturn true if the callsite kind is <code>Span</code>\nTrait implemented by types which have a span <code>Id</code>.\nAttributes provided to a <code>Subscriber</code> describing a new span …\nA guard representing a span which has been entered and is …\nAn owned version of <code>Entered</code>, a guard representing a span …\nIdentifies a span within the context of a subscriber.\nA set of fields recorded by a span.\nA handle representing a span, with the capability to enter …\nReturns the <code>Id</code> of the span that <code>self</code> corresponds to, or …\nReturns <code>Attributes</code> describing a new child span of the …\nReturns <code>true</code> if this set of <code>Attributes</code> contains a value …\nReturns <code>true</code> if this <code>Record</code> contains a value for the given …\nExits this span, returning the underlying <code>Span</code>.\nReturns the set of all fields defined by this span’s …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns this span’s <code>Id</code>, if it is enabled.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns true if the new span’s parent should be …\nReturns true if this set of <code>Attributes</code> contains <em>no</em> values.\nReturns true if this <code>Record</code> contains <em>no</em> values.\nReturns true if the new span should be a root.\nReturns the number of fields that would be visited from …\nReturns a reference to the new span’s metadata.\nReturns <code>Attributes</code> describing a new child span of the …\nConstructs a new <code>Record</code> from a <code>ValueSet</code>.\nReturns <code>Attributes</code> describing a new span at the root of …\nReturns the new span’s explicitly-specified parent, if …\nRecords all the fields in this set of <code>Attributes</code> with the …\nRecords all the fields in this <code>Record</code> with the provided …\nReturns a reference to a <code>ValueSet</code> containing any values …\nA guard that resets the current default dispatcher to the …\nIndicates a <code>Subscriber</code>’s interest in a particular …\nA no-op <code>Subscriber</code>.\nReturned if setting the global dispatcher fails.\nTrait representing the functions required to collect trace …\nReturns an <code>Interest</code> indicating the subscriber is always …\nNotifies the subscriber that a span ID has been cloned.\nReturns a type representing this subscriber’s view of …\nIf <code>self</code> is the same type as the provided <code>TypeId</code>, returns …\n<strong>This method is deprecated.</strong>\nReturns true if a span or event with the specified metadata…\nRecords that a span has been entered.\nRecords that an <code>Event</code> has occurred.\nDetermine if an <code>Event</code> should be recorded.\nRecords that a span has been exited.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if the subscriber is always interested in …\nReturns <code>true</code> if the subscriber is never interested in …\nReturns <code>true</code> if the subscriber is sometimes interested in …\nReturns the highest verbosity level that this <code>Subscriber</code> …\nReturns an <code>Interest</code> indicating that the subscriber is …\nReturns a new <code>NoSubscriber</code>.\nVisit the construction of a new span, returning a new span …\nInvoked when this subscriber becomes a <code>Dispatch</code>.\nRecord a set of values on a span.\nAdds an indication that <code>span</code> follows from the span with …\nRegisters a new callsite with this subscriber, returning …\nSets the <code>Subscriber</code> as the default for the current thread …\nSets this subscriber as the global default for the …\nReturns an <code>Interest</code> indicating the subscriber is sometimes …\nNotifies the subscriber that a span ID has been dropped, …\nSets this <code>Subscriber</code> as the default for the current thread …\nAn affine transformation in 2 dimensional space.\nThe alignment of items along the cross axis.\nA view that aligns its content.\nAlignment of content inside a container.\nA view that animates.\nAn animation frame has passed.\nA view that supports dynamic dispatch.\nAn axis is a direction in which a layout is applied.\nThe back button.\nThe lines are joined with a beveled corner.\nWays to blend two colors.\nRadi of the corners on a rounded rectangle.\nThe border width of a rounded rectangle.\nA boxed dynamic view.\nA context for building the view tree.\nA view that hooks into the build cycle.\nThe end of the line is squared off.\nA button.\nThe style of a button.\nA canvas that can be drawn on.\nItems are packed toward the center of the stack.\nItems are packed toward the center of the stack.\nAlign text in the center.\nA checkbox.\nThe style of a <code>Checkbox</code>.\nReplaces the destination with zero.\nA click handler.\nA clipboard.\nEvent emitted when a window wants to close.\nThe window requested to be close.\nA keyboard key.\nA collapsing view.\nThe style of a collapsing view.\nA color with red, green, blue and alpha components.\nA color picker.\nThe style of a color picker.\nA command was sent.\nA clonable channel for sending <code>Command</code>s.\nCondensed font stretch.\nA view that constrains its content to a given space.\nA container view.\nThe style of a <code>Container</code>.\nThe root <code>View</code> will have <code>Space::UNBOUNDED</code>, and the window …\nA cursive font family.\nA mouse cursor icon.\nA bezier curve.\nA font loaded from data.\nPreserves the destination.\nDestination over source.\nA context for drawing the view tree.\nA view that hooks into the draw cycle.\nA dropdown view.\nAn ease transition curve.\nA transition easing curve.\nItems are packed toward the end of the stack.\nItems are packed toward the end of the stack.\nAlign text at the end.\nA point is inside the shape if a ray from the point …\nAn event that can be sent to a view.\nA context for handling events.\nA view that handles events.\nExpanded font stretch.\nExtra-condensed font stretch.\nExtra-expanded font stretch.\nA constant used to indicate that a dimension should fill …\nA fantasy font family.\nRule determining if a point is inside a shape.\nThe window will have a fixed size equal to <code>Window::size</code>.\nA flexible view.\nA view that focuses on a part of the data.\nA font family, by default <code>FontFamily::SansSerif</code>.\nA source for a font.\nA font stretch.\nA font style.\nA font weight.\nA context for loading and rasterizing fonts.\nThe forward button.\nThe horizontal axis.\nAn clonable image.\nImage data.\nA unique identifier for an <code>Image</code>.\nItalic font style.\nThe justify content of a stack container.\nAn event fired when a key is pressed.\nA keyboard key was pressed.\nA keyboard key was released.\nA context for laying out the view tree.\nA lens used by <code>Focus</code>.\nWays to draw the end of a line.\nWays to join two lines.\nA linear transition curve.\nA 2x2 matrix.\nA view that only builds the inner view when certain data …\nThe lines are joined with a sharp corner.\nModifiers for keyboard and pointer events.\nA monospace font family.\nA font family by name, e.g. “Arial”.\nA point is inside the shape if a ray from the point …\nDo not wrap text.\nNormal font stretch, the default.\nNormal font style, the default.\nOblique font style.\nA view that bridges the gap between <code>impl View</code> and …\nOther buttons.\nA view that adds padding to its content.\nA padding of a rectangle.\nA paint that can be used to fill or stroke a shape.\nA view that draws something.\nA color palette.\nA font loaded from a file.\nA pattern that can be used to fill a shape.\nA pattern.\nA view that has separate <code>ViewState</code> from its content.\nContents of a view, in a sequence.\nA point in 2D space.\nThe state of a pointer.\nA pointer button.\nA unique pointer id.\nA pointer left the window.\nA pointer was moved.\nA pointer moved.\nA pointer button was pressed.\nA pointer button was pressed.\nA pointer button was released.\nA pointer button was released.\nA pointer wheel was scrolled.\nA pointer was scrolled.\nThe primary button, usually the left mouse button or the …\nA convenience trait for rebuilding a <code>View</code>.\nDerive the <code>Rebuild</code> trait.\nA context for rebuilding the view tree.\nA view that handles rebuilds.\nA rectangle defined by its minimum and maximum points.\nThe end of the line is rounded.\nThe lines are joined with a rounded corner.\nA sans-serif font family.\nA scrollable view.\nThe secondary button, usually the right mouse button.\nSemi-condensed font stretch.\nSemi-expanded font stretch.\nThe state of a <code>PodSeq</code>.\nA serif font family.\nA collection of fonts.\nWays to fill a shape.\nA 2 dimensional size.\nA slider.\nThe style of a slider.\nA solid color.\nReplaces the destination with the source.\nSource over destination.\nSpace available to lay out a view.\nItems are evenly distributed in the stack, with half-size …\nItems are evenly distributed in the stack, with equal-size …\nItems are evenly distributed in the stack.\nThe end of the line is squared off and extends past the …\nA view that stacks it’s content in a line.\nItems are packed toward the start of the stack.\nItems are packed toward the start of the stack.\nAlign text at the start.\nThe state of a <code>Pod</code>.\nThe state of the sequence.\nThe state of the view, see top-level documentation for …\nItems are stretched to fill the stack.\nProperties of a stroke.\nA trait for styling a value.\nA map of style values.\nThe tertiary button, usually the middle mouse button.\nA view that displays text.\nAlignment of a section of text.\nA convenient wrapper around a <code>cosmic_text::Buffer</code>.\nA text input.\nThe style of a text input.\nThe style of a text.\nWrapping of a section of text.\nA view that displays some text when the content is hovered.\nThe style of a tooltip.\nA view that transforms its content.\nA transition.\nA view that creates a trigger around the content.\nUltra-condensed font stretch.\nUltra-expanded font stretch.\nView state needs to be updated.\nA 2D vector.\nThe vertical axis.\nA single UI component.\nA sequence of views.\nState associated with a <code>View</code>.\nA window.\nA unique identifier for a window.\nThe window was resized.\nThe window was scaled.\nThe sizing of a window.\nA view that stores some additional data.\nWrap text at the word boundary.\nA view that lays out it’s content in a line wrapping if …\nA view that overlays its content on top of each other.\nThe alpha component of the color.\nThe accent color.\nThe low emphasis accent color.\nThe build callback.\nThe callback after an event is propagated.\nCreate a new <code>Aligned</code> view.\nHow to align the content along the cross axis, within each …\nThe horizontal alignment of the text.\nThe horizontal alignment of the text.\nThe horizontal alignment of the text.\nThe vertical alignment of the text.\nThe horizontal alignment of the text.\nThe horizontal alignment of the text.\nHow to align the content along the cross axis.\nThe alignment.\nThe color of the alpha slider.\nThe color of the alpha slider.\nWhether the alt key is held down.\nCreate a new <code>Animate</code>.\nThe animation callback.\nWhether the paint should be anti-aliased.\nCreate a new <code>BoxedView</code>.\nGet a reference to the underlying <code>Any</code> object.\nThe axis of the scroll.\nThe axis of the slider.\nThe axis of the slider.\nThe axis of the stack.\nThe axis.\nThe blue component of the color.\nCreate a new <code>Container</code> with background.\nThe background color.\nThe background color.\nThe background color.\nThe background color of the header.\nThe background color of the header.\nThe background color.\nThe background color.\nThe background color of the slider.\nThe background color of the slider.\nThe background color of the text.\nThe background color of the text.\nThe callback before an event is propagated.\nThe blend mode of the paint.\nThe border color of the button.\nThe border color.\nThe border color.\nThe border color.\nThe color of the border of the header.\nThe color of the border of the header.\nThe border color of the color picker.\nThe border color of the color picker.\nThe border color.\nThe border color.\nThe border color of the slider.\nThe border color of the slider.\nThe border color of the text.\nThe border color of the text.\nThe border radius of the button.\nThe border radius.\nThe border radius.\nThe border radius.\nThe border radius of the header.\nThe border radius of the header.\nThe border radius.\nThe border radius.\nThe radius of the scrollbar.\nThe border radius of the slider.\nThe border radius of the slider.\nThe border radius of the text.\nThe border radius of the text.\nThe border width of the button.\nThe border width.\nThe border width.\nThe border width.\nThe border width of the header.\nThe border width of the header.\nThe border width of the color picker.\nThe border width of the color picker.\nThe border width.\nThe border width.\nThe border width of the slider.\nThe border width of the slider.\nThe border width of the text.\nThe border width of the text.\nCreate a new <code>Aligned</code> view that aligns its content to the …\nThe bottom border width.\nThe bottom padding.\nCreate a new <code>Aligned</code> view that aligns its content to the …\nThe bottom left corner radius.\nCreate a new <code>Aligned</code> view that aligns its content to the …\nThe bottom right corner radius.\nBuild the sequence state.\nBuild the view state, see top-level documentation for more …\nCreate a new <code>Button</code>.\nThe button of the pointer.\nThe button of the pointer.\nThe button to listen for.\nThe cap of the stroke.\nCreate a new <code>Aligned</code> view that aligns its content to the …\nCreate a new <code>Checkbox</code>.\nWhether the checkbox is checked.\nCreate a new <code>Painter</code> view that draws a circle.\nCreate a new <code>Clickable</code>.\nWhether the button was clicked.\nThe key that was pressed or released.\nCreate a new <code>Collapsing</code>.\nThe color of the window.\nThe color of the button.\nThe color of the button.\nThe color of the checkbox.\nThe color of the checkbox.\nThe color of the color picker.\nThe color of the scrollbar.\nThe foreground color of the slider.\nThe foreground color of the slider.\nThe color of the text.\nThe color of the text.\nThe color of the text.\nThe color of the text.\nThe color of the text.\nThe color of text.\nCreate a new <code>ColorPicker</code>.\nThe gap between each column.\nCreate a new <code>Constrain</code>ed view, constraining its content to …\nCreate a new <code>Container</code>.\nThe content.\nThe content.\nThe content view.\nThe content.\nThe content.\nThe content to align.\nThe content.\nThe content.\nThe content.\nThe content to constrain.\nThe content.\nThe content of the dropdown.\nThe content.\nThe content of the view.\nThe content.\nThe content.\nThe content of the stack.\nThe content to display.\nThe content.\nThe content.\nThe content to overlay.\nThe contrast color.\nWhether the control key is held down.\nThe danger color.\nThe low emphasis danger color.\nConstructs an event at the debug level.\nWhether the window is decorated.\nWhether the view is open by default.\nThe delay before the tooltip is displayed.\nThe delay before the tooltip is displayed.\nThe delta of the pointer.\nThe delta of the pointer.\nWhether the item should be clickable when it’s …\nDraw the view, see top-level documentation for more …\nThe draw function.\nDraw the nth view.\nCreate a new <code>Dropdown</code> view.\nThe duration of the transition.\nBuild the view.\nDraw the view.\nHandle an event.\nCalculate the layout.\nRebuild the view.\nCreate an ease transition with the given <code>duration</code>.\nThe easing curve.\nCreate a new <code>Painter</code> view that draws an ellipse.\nConstructs an event at the error level.\nHandle an event, see top-level documentation for more …\nHandle an event for the nth view.\nCreate a new expanded <code>Flex</code> view.\nThe distance of the fancy effect.\nThe distance of the fancy effect.\nCreate a new <code>Flex</code> view.\nThe flex value of the view.\nCreate a new <code>Focus</code>.\nThe font family of the text.\nThe font family of the text.\nThe font family of the text.\nThe font family of the text.\nThe font family of the text.\nThe font family of the text.\nThe font size of the text.\nThe font size of the text.\nThe font size of the text.\nThe font size of the text.\nThe font size of the text.\nThe font size of the text.\nThe font stretch of the text.\nThe font stretch of the text.\nThe font stretch of the text.\nThe font stretch of the text.\nThe font stretch of the text.\nThe font stretch of the text.\nThe font style of the text.\nThe font.into of the text.\nThe font style of the text.\nThe font.into of the text.\nThe font style of the text.\nThe font style of the text.\nThe font system.\nThe font weight of the text.\nThe font weight of the text.\nThe font weight of the text.\nThe font weight of the text.\nThe font weight of the text.\nThe font weight of the text.\nThe green component of the color.\nThe gap between children.\nThe glyph cache.\nThe header.\nThe header of the dropdown.\nCreate a new <code>Constrain</code>ed view, constraining its content to …\nThe height.\nCreate a new color, with the given hex string.\nThe view the pointer is over.\nCreate a new horizontal <code>Scroll</code>.\nCreate a new color, with the given <code>hue</code>, <code>saturation</code> and …\nCreate a new color, with the given <code>hue</code>, <code>saturation</code>, …\nCreate a horizontal <code>Stack</code>.\nCreate a horizontal <code>Stack</code>.\nCreate a horizontal <code>Stack</code>, with dynamic content.\nCreate a horizontal <code>Stack</code>, with vector content.\nCreate a horizontal <code>Wrap</code>.\nCreate a horizontal <code>Wrap</code>.\nCreate a horizontal <code>Wrap</code>, with dynamic content.\nCreate a horizontal <code>Wrap</code>, with a vector of content.\nThe icon of the window.\nThe color of the icon.\nThe color of the icon.\nThe size of the icon.\nThe size of the icon.\nThe unique id of the pointer.\nThe unique id of the pointer.\nThe unique id of the pointer.\nThe unique id of the pointer.\nThe image of the pattern.\nLoad a font from a file or directory.\nThe info color.\nConstructs an event at the info level.\nThe low emphasis info color.\nThe inset of the scrollbar.\nThe join of the stroke.\nHow to justify the content along the main axis.\nHow to justify the content along the main axis.\nHow to justify the content along the cross axis.\nThe color of the scrollbar knob.\nLayout the view, see top-level documentation for more …\nLayout the nth view.\nCreate a new <code>Aligned</code> view that aligns its content to the …\nThe left border width.\nThe left padding.\nThe length of the sequence.\nThe length of the slider.\nThe length of the slider.\nThe color of the lightness slider.\nThe color of the lightness slider.\nThe line height of the text.\nThe line height of the text.\nThe line height of the text.\nThe line height of the text.\nThe line height of the text.\nThe line height of the text.\nCreate a linear transition with the given <code>duration</code>.\nThe matrix of the affine transformation.\nThe maximum point of the rectangle.\nMaximum size the view can be.\nCreate a new <code>Constrain</code>ed view, constraining its content to …\nCreate a new <code>Constrain</code>ed view, constraining its content to …\nCreate a new <code>Constrain</code>ed view, constraining its content to …\nWhether the window is maximized.\nCreate a new <code>Memo</code>.\nWhether the meta key is held down.\nThe minimum point of the rectangle.\nMinimum size the view can be.\nCreate a new <code>Constrain</code>ed view, constraining its content to …\nCreate a new <code>Constrain</code>ed view, constraining its content to …\nCreate a new <code>Constrain</code>ed view, constraining its content to …\nThe miter limit of the stroke.\nThe modifiers that were active.\nThe modifiers of the pointer.\nThe modifiers of the pointer.\nThe modifiers of the pointer.\nThe modifiers of the pointer.\nWhether the input is multi-line.\nCreate a new color, with the given <code>hue</code>, <code>saturation</code> and …\nCreate a new color, with the given <code>hue</code>, <code>saturation</code>, …\nCreate a new color, with the given <code>hue</code>, <code>saturation</code> and …\nCreate a new color, with the given <code>hue</code>, <code>saturation</code>, <code>value</code> …\nCreate a new color, with the given <code>lightness</code>, <code>a</code> and <code>b</code> …\nCreate a new color, with the given <code>lightness</code>, <code>a</code>, <code>b</code> and …\nCreate a new color, with the given <code>lightness</code>, <code>chroma</code> and …\nCreate a new color, with the given <code>lightness</code>, <code>chroma</code>, <code>hue</code> …\nCreate a new <code>BuildHandler</code>.\nCreate a new <code>Clickable</code>, with an <code>on_click</code> callback.\nThe callback for when the button is clicked.\nCreate a new <code>DrawHandler</code>.\nThe draw callback.\nCreate a new <code>EventHandler</code>, with an after callback.\nCreate a new <code>EventHandler</code>, with a before callback.\nThe on_input callback.\nThe callback for when the value changes.\nA callback that is called when an input is received.\nA callback for when the view is opened or closed.\nCreate a new <code>Clickable</code>, with an <code>on_press</code> callback.\nThe callback for when the button is pressed.\nCreate a new <code>RebuildHandler</code>.\nCreate a new <code>Clickable</code>, with an <code>on_release</code> callback.\nThe callback for when the button is released.\nA callback that is called when the input is submitted.\nThe opacity of the pattern.\nA view that bridges the gap between <code>impl View</code> and …\nWhether the view is open.\nCreate a new <code>Pad</code> view.\nCreate a new <code>Pad</code> view adding padding to the bottom.\nCreate a new <code>Pad</code> view adding padding to the left.\nCreate a new <code>Pad</code> view adding padding to the right.\nCreate a new <code>Pad</code> view adding padding to the top.\nThe padding of the button.\nThe padding.\nThe padding.\nThe padding of the tooltip.\nThe padding of the text.\nCreate a new <code>Painter</code> view.\nGet the palette of the style.\nPlaceholder text to display when the input is empty.\nThe color of the placeholder text.\nThe color of the placeholder text.\nCreate a new <code>Pod</code> view.\nThe position of the pointer.\nThe position of the pointer.\nThe position of the pointer.\nThe position of the pointer.\nThe position of the pointer.\nThe primary color.\nThe low emphasis primary color.\nThe red component of the color.\nThe range of the slider.\nRebuild the view.\nRebuild the sequence state.\nRebuild the view state, see top-level documentation for …\nThe callback for when a rebuild is requested.\nRebuild the nth view.\nCreate a new <code>Painter</code> view that draws a rectangle.\nWhether the window is resizable.\nCreate a new color, with the given <code>red</code>, <code>green</code> and <code>blue</code> …\nCreate a new color, with the given <code>red</code>, <code>green</code>, <code>blue</code> and …\nCreate a new <code>Aligned</code> view that aligns its content to the …\nThe right border width.\nThe right padding.\nCreate a new <code>Transform</code> view that rotates its content.\nCreate a new <code>Transform</code> view that rotates its content in …\nThe gap between each row.\nCreate a new <code>Transform</code> view that scales its content.\nThe scale of the window.\nThe secondary color.\nThe low emphasis secondary color.\nThe shader of the paint.\nWhether the shift key is held down.\nCreate a new <code>Constrain</code>ed view, cosntraining its content to …\nThe size of the window.\nThe size of the checkbox.\nThe size of the checkbox.\nThe size of the color picker.\nThe size of the color picker.\nThe size of the view.\nThe sizing of the window.\nCreate a new <code>Slider</code>.\nThe width of the sliders.\nThe width of the sliders.\nThe space to constrain the content to.\nThe stroke width of the checkbox.\nThe stroke width of the checkbox.\nGet a value from the current style.\nGet a value from the current style or a default value.\nRun a closure with the given style.\nStyle a value.\nThe success color.\nThe low emphasis success color.\nThe surface color.\nThe high emphasis surface color.\nThe higher emphasis surface color.\nThe highest emphasis surface color.\nThe low emphasis surface color.\nThe lower emphasis surface color.\nThe swash cache.\nCreate a new <code>Text</code>.\nThe text that was entered.\nThe text.\nThe text.\nThe text to display.\nCreate a formatted <code>Text</code>.\nCreate a new <code>TextInput</code>.\nWhether the view is tight.\nThe title of the window.\nWhether the dropdown is toggled.\nCreate a new <code>Tooltip</code> view.\nCreate a new <code>Aligned</code> view that aligns its content to the …\nThe top border width.\nThe top padding.\nCreate a new <code>Aligned</code> view that aligns its content to the …\nThe top left corner radius.\nCreate a new <code>Aligned</code> view that aligns its content to the …\nThe top right corner radius.\nConstructs an event at the trace level.\nCreate a new <code>Transform</code> view.\nThe transformation of the pattern.\nThe transform.\nAnimate a transition.\nThe transition of the button.\nThe transition of the button.\nThe transition of the checkbox.\nThe transition of the checkbox.\nThe transition of the view.\nThe transition of the view.\nThe transition of the scrollbar.\nAnimate a view when active changes.\nAnimate a view when focused changes.\nAnimate a view when hot changes.\nCreate a new <code>Transform</code> view that translates its content.\nThe translation of the affine transformation.\nCreate a new <code>Trigger</code> view.\nTry getting a value from the current style.\nThe value of the slider.\nWhether the window is visible.\nCreate a new vertical <code>Scroll</code>.\nCreate a vertical <code>Stack</code>.\nCreate a vertical <code>Stack</code>.\nCreate a vertical <code>Stack</code>, with dynamic content.\nCreate a vertical <code>Stack</code>, with vector content.\nCreate a vertical <code>Wrap</code>.\nCreate a vertical <code>Wrap</code>.\nCreate a vertical <code>Wrap</code>, with dynamic content.\nCreate a vertical <code>Wrap</code>, with a vector of content.\nConstructs an event at the warn level.\nThe warning color.\nThe low emphasis warning color.\nCreate a new <code>Constrain</code>ed view, constraining its content to …\nThe width of the stroke.\nThe width.\nThe width of the scrollbar.\nThe width of the slider.\nThe width of the slider.\nThe window that wants to close.\nCreate a new <code>WithState</code>.\nCreate a new <code>WithState</code> using <code>S::default()</code>.\nCreate a new view unwrapping some data from the state.\nCreate a new view unwrapping some state from the data.\nThe text wrap of the text.\nThe text wrap of the text.\nThe text wrap of the text.\nThe text wrap of the text.\nThe text wrap of the text.\nThe text wrap of the text.\nThe horizontal alignment.\nThe x axis of the matrix.\nThe x coordinate.\nThe x coordinate.\nThe vertical alignment.\nThe y axis of the matrix.\nThe y coordinate.\nThe y coordinate.\nCreate a new <code>ZStack</code> view.\nCreate a new <code>ZStack</code> view.\nA convenience trait for rebuilding a <code>View</code>.\nDerive the <code>Rebuild</code> trait.\nRebuild the view.\nA color palette.\nA trait for styling a value.\nA map of style values.\nThe accent color.\nThe low emphasis accent color.\nThe background color.\nThe contrast color.\nThe danger color.\nThe low emphasis danger color.\nThe info color.\nThe low emphasis info color.\nGet the palette of the style.\nThe primary color.\nThe low emphasis primary color.\nThe secondary color.\nThe low emphasis secondary color.\nGet a value from the current style.\nGet a value from the current style or a default value.\nRun a closure with the given style.\nStyle a value.\nThe success color.\nThe low emphasis success color.\nThe surface color.\nThe high emphasis surface color.\nThe higher emphasis surface color.\nThe highest emphasis surface color.\nThe low emphasis surface color.\nThe lower emphasis surface color.\nTry getting a value from the current style.\nThe warning color.\nThe low emphasis warning color.\nA cached glyph.\nAlign text in the center.\nCondensed font stretch.\nA cursive font family.\nA font loaded from data.\nAlign text at the end.\nExpanded font stretch.\nExtra-condensed font stretch.\nExtra-expanded font stretch.\nA fantasy font family.\nA font family, by default <code>FontFamily::SansSerif</code>.\nA source for a font.\nA font stretch.\nA font style.\nA font weight.\nA context for loading and rasterizing fonts.\nItalic font style.\nA monospace font family.\nA font family by name, e.g. “Arial”.\nDo not wrap text.\nNormal font stretch, the default.\nNormal font style, the default.\nOblique font style.\nA font loaded from a file.\nA sans-serif font family.\nSemi-condensed font stretch.\nSemi-expanded font stretch.\nA serif font family.\nA collection of fonts.\nAlign text at the start.\nAlignment of a section of text.\nAttributes of a section of text.\nA convenient wrapper around a <code>cosmic_text::Buffer</code>.\nWrapping of a section of text.\nUltra-condensed font stretch.\nUltra-expanded font stretch.\nWrap text at the word boundary.\nThe font family of the text.\nThe font system.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe glyph cache.\nThe image of the glyph.\nLoad a font from a file or directory.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe offset of the glyph.\nThe size of the glyph.\nThe font size of the text.\nThe font style of the text.\nThe swash cache.\nConvert the text attributes to a <code>cosmic_text::Attrs</code>.\nThe font weight of the text.\nAn ease transition curve.\nA transition easing curve.\nA linear transition curve.\nA transition.\nThe duration of the transition.\nCreate an ease transition with the given <code>duration</code>.\nThe easing curve.\nCreate a linear transition with the given <code>duration</code>.\nThe view is active.\nThe view needs an animation frame.\nThe state of a <code>BoxedView</code>.\nA view that supports dynamic dispatch.\nA boxed dynamic view.\nThe view needs to be drawn.\nThe view is focusable.\nThe view is focused.\nEquivalent to …\nThe view has an active child.\nThe view has a focused child.\nThe view has a hot child.\nThe view is hot.\nEquivalent to <code>Self::HOT | Self::FOCUSED | Self::ACTIVE</code>.\nThe view needs to be laid out.\nA view that has separate <code>ViewState</code> from its content.\nContents of a view, in a sequence.\nThe state of a <code>PodSeq</code>.\nThe state of a <code>Pod</code>.\nThe state of the sequence.\nThe state of the view, see top-level documentation for …\nFlags that indicate what needs to be updated.\nA single UI component.\nFlags that indicate state of a view.\nAn opaque unique identifier for a view.\nA sequence of views.\nState associated with a <code>View</code>.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nCreate a new <code>BoxedView</code>.\nGet a reference to the underlying <code>Any</code> object.\nGet the underlying id as a <code>u64</code>.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nBuild the sequence state.\nBuild the view state, see top-level documentation for more …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nDraw the view, see top-level documentation for more …\nDraw the nth view.\nBuild the view.\nDraw the view.\nHandle an event.\nCalculate the layout.\nRebuild the view.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nHandle an event, see top-level documentation for more …\nHandle an event for the nth view.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nLayout the view, see top-level documentation for more …\nLayout the nth view.\nThe length of the sequence.\nCreate a new <code>ViewId</code>.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nCreate a new <code>Pod</code> view.\nRebuild the sequence state.\nRebuild the view state, see top-level documentation for …\nRebuild the nth view.\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nA view that aligns its content.\nA view that animates.\nA view that hooks into the build cycle.\nA button.\nThe style of a button.\nA checkbox.\nThe style of a <code>Checkbox</code>.\nA click handler.\nA collapsing view.\nThe style of a collapsing view.\nA color picker.\nThe style of a color picker.\nA view that constrains its content to a given space.\nA container view.\nThe style of a <code>Container</code>.\nA view that hooks into the draw cycle.\nA dropdown view.\nA view that handles events.\nA flexible view.\nA view that focuses on a part of the data.\nA lens used by <code>Focus</code>.\nA view that only builds the inner view when certain data …\nA view that bridges the gap between <code>impl View</code> and …\nA view that adds padding to its content.\nA view that draws something.\nA view that handles rebuilds.\nA scrollable view.\nA slider.\nThe style of a slider.\nA view that stacks it’s content in a line.\nA view that displays text.\nA text input.\nThe style of a text input.\nThe style of a text.\nA view that displays some text when the content is hovered.\nThe style of a tooltip.\nA view that transforms its content.\nA view that creates a trigger around the content.\nA view that stores some additional data.\nA view that lays out it’s content in a line wrapping if …\nA view that overlays its content on top of each other.\nThe build callback.\nThe callback after an event is propagated.\nCreate a new <code>Aligned</code> view.\nHow to align the content along the cross axis, within each …\nThe horizontal alignment of the text.\nThe horizontal alignment of the text.\nThe horizontal alignment of the text.\nThe vertical alignment of the text.\nThe horizontal alignment of the text.\nThe horizontal alignment of the text.\nHow to align the content along the cross axis.\nThe alignment.\nThe color of the alpha slider.\nThe color of the alpha slider.\nCreate a new <code>Animate</code>.\nThe animation callback.\nThe axis of the scroll.\nThe axis of the slider.\nThe axis of the slider.\nThe axis of the stack.\nThe axis.\nCreate a new <code>Container</code> with background.\nThe background color.\nThe background color.\nThe background color of the header.\nThe background color of the header.\nThe background color.\nThe background color.\nThe background color of the slider.\nThe background color of the slider.\nThe background color of the text.\nThe background color of the text.\nThe callback before an event is propagated.\nThe border color of the button.\nThe border color.\nThe border color.\nThe border color.\nThe color of the border of the header.\nThe color of the border of the header.\nThe border color of the color picker.\nThe border color of the color picker.\nThe border color.\nThe border color.\nThe border color of the slider.\nThe border color of the slider.\nThe border color of the text.\nThe border color of the text.\nThe border radius of the button.\nThe border radius.\nThe border radius.\nThe border radius.\nThe border radius of the header.\nThe border radius of the header.\nThe border radius.\nThe border radius.\nThe radius of the scrollbar.\nThe border radius of the slider.\nThe border radius of the slider.\nThe border radius of the text.\nThe border radius of the text.\nThe border width of the button.\nThe border width.\nThe border width.\nThe border width.\nThe border width of the header.\nThe border width of the header.\nThe border width of the color picker.\nThe border width of the color picker.\nThe border width.\nThe border width.\nThe border width of the slider.\nThe border width of the slider.\nThe border width of the text.\nThe border width of the text.\nCreate a new <code>Aligned</code> view that aligns its content to the …\nCreate a new <code>Aligned</code> view that aligns its content to the …\nCreate a new <code>Aligned</code> view that aligns its content to the …\nCreate a new <code>Button</code>.\nThe button to listen for.\nCreate a new <code>Aligned</code> view that aligns its content to the …\nCreate a new <code>Checkbox</code>.\nWhether the checkbox is checked.\nCreate a new <code>Painter</code> view that draws a circle.\nCreate a new <code>Clickable</code>.\nCreate a new <code>Collapsing</code>.\nThe color of the button.\nThe color of the button.\nThe color of the checkbox.\nThe color of the checkbox.\nThe color of the color picker.\nThe color of the scrollbar.\nThe foreground color of the slider.\nThe foreground color of the slider.\nThe color of the text.\nThe color of the text.\nThe color of the text.\nThe color of the text.\nThe color of the text.\nThe color of text.\nCreate a new <code>ColorPicker</code>.\nThe gap between each column.\nCreate a new <code>Constrain</code>ed view, constraining its content to …\nCreate a new <code>Container</code>.\nThe content.\nThe content.\nThe content view.\nThe content.\nThe content.\nThe content to align.\nThe content.\nThe content.\nThe content.\nThe content to constrain.\nThe content.\nThe content of the dropdown.\nThe content.\nThe content of the view.\nThe content.\nThe content.\nThe content of the stack.\nThe content to display.\nThe content.\nThe content.\nThe content to overlay.\nWhether the view is open by default.\nThe delay before the tooltip is displayed.\nThe delay before the tooltip is displayed.\nWhether the item should be clickable when it’s …\nThe draw function.\nCreate a new <code>Dropdown</code> view.\nCreate a new <code>Painter</code> view that draws an ellipse.\nCreate a new expanded <code>Flex</code> view.\nThe distance of the fancy effect.\nThe distance of the fancy effect.\nCreate a new <code>Flex</code> view.\nThe flex value of the view.\nCreate a new <code>Focus</code>.\nThe font family of the text.\nThe font family of the text.\nThe font family of the text.\nThe font family of the text.\nThe font family of the text.\nThe font family of the text.\nThe font size of the text.\nThe font size of the text.\nThe font size of the text.\nThe font size of the text.\nThe font size of the text.\nThe font size of the text.\nThe font stretch of the text.\nThe font stretch of the text.\nThe font stretch of the text.\nThe font stretch of the text.\nThe font stretch of the text.\nThe font stretch of the text.\nThe font style of the text.\nThe font.into of the text.\nThe font style of the text.\nThe font.into of the text.\nThe font style of the text.\nThe font style of the text.\nThe font weight of the text.\nThe font weight of the text.\nThe font weight of the text.\nThe font weight of the text.\nThe font weight of the text.\nThe font weight of the text.\nThe gap between children.\nThe header.\nThe header of the dropdown.\nCreate a new <code>Constrain</code>ed view, constraining its content to …\nCreate a new horizontal <code>Scroll</code>.\nCreate a horizontal <code>Stack</code>.\nCreate a horizontal <code>Stack</code>.\nCreate a horizontal <code>Stack</code>, with dynamic content.\nCreate a horizontal <code>Stack</code>, with vector content.\nCreate a horizontal <code>Wrap</code>.\nCreate a horizontal <code>Wrap</code>.\nCreate a horizontal <code>Wrap</code>, with dynamic content.\nCreate a horizontal <code>Wrap</code>, with a vector of content.\nThe color of the icon.\nThe color of the icon.\nThe size of the icon.\nThe size of the icon.\nThe inset of the scrollbar.\nHow to justify the content along the main axis.\nHow to justify the content along the main axis.\nHow to justify the content along the cross axis.\nThe color of the scrollbar knob.\nCreate a new <code>Aligned</code> view that aligns its content to the …\nThe length of the slider.\nThe length of the slider.\nThe color of the lightness slider.\nThe color of the lightness slider.\nThe line height of the text.\nThe line height of the text.\nThe line height of the text.\nThe line height of the text.\nThe line height of the text.\nThe line height of the text.\nCreate a new <code>Constrain</code>ed view, constraining its content to …\nCreate a new <code>Constrain</code>ed view, constraining its content to …\nCreate a new <code>Constrain</code>ed view, constraining its content to …\nCreate a new <code>Memo</code>.\nCreate a new <code>Constrain</code>ed view, constraining its content to …\nCreate a new <code>Constrain</code>ed view, constraining its content to …\nCreate a new <code>Constrain</code>ed view, constraining its content to …\nWhether the input is multi-line.\nCreate a new <code>BuildHandler</code>.\nCreate a new <code>Clickable</code>, with an <code>on_click</code> callback.\nThe callback for when the button is clicked.\nCreate a new <code>DrawHandler</code>.\nThe draw callback.\nCreate a new <code>EventHandler</code>, with an after callback.\nCreate a new <code>EventHandler</code>, with a before callback.\nThe on_input callback.\nThe callback for when the value changes.\nA callback that is called when an input is received.\nA callback for when the view is opened or closed.\nCreate a new <code>Clickable</code>, with an <code>on_press</code> callback.\nThe callback for when the button is pressed.\nCreate a new <code>RebuildHandler</code>.\nCreate a new <code>Clickable</code>, with an <code>on_release</code> callback.\nThe callback for when the button is released.\nA callback that is called when the input is submitted.\nA view that bridges the gap between <code>impl View</code> and …\nWhether the view is open.\nCreate a new <code>Pad</code> view.\nCreate a new <code>Pad</code> view adding padding to the bottom.\nCreate a new <code>Pad</code> view adding padding to the left.\nCreate a new <code>Pad</code> view adding padding to the right.\nCreate a new <code>Pad</code> view adding padding to the top.\nThe padding of the button.\nThe padding.\nThe padding.\nThe padding of the tooltip.\nThe padding of the text.\nCreate a new <code>Painter</code> view.\nPlaceholder text to display when the input is empty.\nThe color of the placeholder text.\nThe color of the placeholder text.\nThe range of the slider.\nThe callback for when a rebuild is requested.\nCreate a new <code>Painter</code> view that draws a rectangle.\nCreate a new <code>Aligned</code> view that aligns its content to the …\nCreate a new <code>Transform</code> view that rotates its content.\nCreate a new <code>Transform</code> view that rotates its content in …\nThe gap between each row.\nCreate a new <code>Transform</code> view that scales its content.\nCreate a new <code>Constrain</code>ed view, cosntraining its content to …\nThe size of the checkbox.\nThe size of the checkbox.\nThe size of the color picker.\nThe size of the color picker.\nThe size of the view.\nCreate a new <code>Slider</code>.\nThe width of the sliders.\nThe width of the sliders.\nThe space to constrain the content to.\nThe stroke width of the checkbox.\nThe stroke width of the checkbox.\nCreate a new <code>Text</code>.\nThe text.\nThe text.\nThe text to display.\nCreate a formatted <code>Text</code>.\nCreate a new <code>TextInput</code>.\nWhether the view is tight.\nWhether the dropdown is toggled.\nCreate a new <code>Tooltip</code> view.\nCreate a new <code>Aligned</code> view that aligns its content to the …\nCreate a new <code>Aligned</code> view that aligns its content to the …\nCreate a new <code>Aligned</code> view that aligns its content to the …\nCreate a new <code>Transform</code> view.\nThe transform.\nAnimate a transition.\nThe transition of the button.\nThe transition of the button.\nThe transition of the checkbox.\nThe transition of the checkbox.\nThe transition of the view.\nThe transition of the view.\nThe transition of the scrollbar.\nAnimate a view when active changes.\nAnimate a view when focused changes.\nAnimate a view when hot changes.\nCreate a new <code>Transform</code> view that translates its content.\nCreate a new <code>Trigger</code> view.\nThe value of the slider.\nCreate a new vertical <code>Scroll</code>.\nCreate a vertical <code>Stack</code>.\nCreate a vertical <code>Stack</code>.\nCreate a vertical <code>Stack</code>, with dynamic content.\nCreate a vertical <code>Stack</code>, with vector content.\nCreate a vertical <code>Wrap</code>.\nCreate a vertical <code>Wrap</code>.\nCreate a vertical <code>Wrap</code>, with dynamic content.\nCreate a vertical <code>Wrap</code>, with a vector of content.\nCreate a new <code>Constrain</code>ed view, constraining its content to …\nThe width of the scrollbar.\nThe width of the slider.\nThe width of the slider.\nCreate a new <code>WithState</code>.\nCreate a new <code>WithState</code> using <code>S::default()</code>.\nCreate a new view unwrapping some data from the state.\nCreate a new view unwrapping some state from the data.\nThe text wrap of the text.\nThe text wrap of the text.\nThe text wrap of the text.\nThe text wrap of the text.\nThe text wrap of the text.\nThe text wrap of the text.\nCreate a new <code>ZStack</code> view.\nCreate a new <code>ZStack</code> view.\nSet the color of the window.\nThe root <code>View</code> will have <code>Space::UNBOUNDED</code>, and the window …\nA mouse cursor icon.\nSet the cursor of the window.\nSet whether the window is decorated.\nThe window will have a fixed size equal to <code>Window::size</code>.\nSet the icon of the window.\nSet whether the window is maximized.\nThe state of a pointer.\nSet whether the window is resizable.\nSet the scale of the window.\nSet the size of the window.\nSet the title of the window.\nSet whether the window is visible.\nA window.\nA unique identifier for a window.\nThe sizing of a window.\nThe state of a window.\nAn update to a window.\nThe color of the window.\nThe color of the window.\nWhether the window is decorated.\nWhether the window is decorated.\nGet the difference between a window and a previous state.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe view the pointer is over.\nThe icon of the window.\nThe icon of the window.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether the window is maximized.\nWhether the window is maximized.\nThe position of the pointer.\nWhether the window is resizable.\nWhether the window is resizable.\nThe scale of the window.\nThe scale of the window.\nThe size of the window.\nThe size of the window.\nThe sizing of the window.\nThe title of the window.\nThe title of the window.\nWhether the window is visible.\nWhether the window is visible.\nAn affine transformation in 2 dimensional space.\nThe alignment of items along the cross axis.\nA view that aligns its content.\nAlignment of content inside a container.\nA view that animates.\nAn animation frame has passed.\nA view that supports dynamic dispatch.\nThe main application state.\nA builder for an <code>App</code>.\nCommands that can be sent to the application.\nAn axis is a direction in which a layout is applied.\nBlack font weight (900), the boldest possible.\nBold font weight (700).\nAlign the content at the bottom of the container.\nAlign the content at the bottom left of the container.\nAlign the content at the bottom right of the container.\nThe back button.\nThe lines are joined with a beveled corner.\nWays to blend two colors.\nRadi of the corners on a rounded rectangle.\nThe border width of a rounded rectangle.\nA boxed dynamic view.\nDerive the builder pattern.\nA context for building the view tree.\nA view that hooks into the build cycle.\nThe end of the line is squared off.\nA button.\nThe style of a button.\nAlign the content at the center of the container.\nA canvas that can be drawn on.\nItems are packed toward the center of the stack.\nItems are packed toward the center of the stack.\nAlign text in the center.\nA checkbox.\nThe style of a <code>Checkbox</code>.\nReplaces the destination with zero.\nA click handler.\nA clipboard.\nEvent emitted when a window wants to close.\nThe window requested to be close.\nClose a window.\nA keyboard key.\nA collapsing view.\nThe style of a collapsing view.\nA color with red, green, blue and alpha components.\nA color picker.\nThe style of a color picker.\nA command was sent.\nA clonable channel for sending <code>Command</code>s.\nCondensed font stretch.\nA view that constrains its content to a given space.\nA container view.\nThe style of a <code>Container</code>.\nThe root <code>View</code> will have <code>Space::UNBOUNDED</code>, and the window …\nA cursive font family.\nA mouse cursor icon.\nA bezier curve.\nA font loaded from data.\nA delegate for handling events in an application.\nThe context passed to the <code>Delegate</code> trait.\nPreserves the destination.\nDestination over source.\nDrag a window.\nA context for drawing the view tree.\nA view that hooks into the draw cycle.\nA dropdown view.\nExtra-bold font weight (800).\nExtra-light font weight (200).\nAn ease transition curve.\nA transition easing curve.\nItems are packed toward the end of the stack.\nItems are packed toward the end of the stack.\nAlign text at the end.\nA point is inside the shape if a ray from the point …\nAn event that can be sent to a view.\nA context for handling events.\nA view that handles events.\nExpanded font stretch.\nExtra-condensed font stretch.\nExtra-expanded font stretch.\nA constant used to indicate that a dimension should fill …\nAlias for <code>Self::INFINITY</code>.\nThe infinite space.\nA fantasy font family.\nRule determining if a point is inside a shape.\nThe window will have a fixed size equal to <code>Window::size</code>.\nA flexible view.\nA view that focuses on a part of the data.\nA font family, by default <code>FontFamily::SansSerif</code>.\nA source for a font.\nA font stretch.\nA font style.\nA font weight.\nA context for loading and rasterizing fonts.\nThe forward button.\nThe horizontal axis.\nThe identity transformation.\nThe identity matrix.\nThe infinite size.\nAn clonable image.\nImage data.\nA unique identifier for an <code>Image</code>.\nItalic font style.\nThe justify content of a stack container.\nAn event fired when a key is pressed.\nA keyboard key was pressed.\nA keyboard key was released.\nAlign the content at the left of the container.\nLight font weight (300).\nA context for laying out the view tree.\nA lens used by <code>Focus</code>.\nWays to draw the end of a line.\nWays to join two lines.\nA linear transition curve.\nMedium font weight (500).\nA 2x2 matrix.\nA view that only builds the inner view when certain data …\nThe lines are joined with a sharp corner.\nModifiers for keyboard and pointer events.\nA monospace font family.\nThe negative unit x point.\nThe negative unit x vector.\nThe negative unit y point.\nThe negative unit y vector.\nNormal font weight (400), the default.\nA font family by name, e.g. “Arial”.\nA point is inside the shape if a ray from the point …\nDo not wrap text.\nNormal font stretch, the default.\nNormal font style, the default.\nThe one point.\nThe one vector.\nOblique font style.\nA view that bridges the gap between <code>impl View</code> and …\nOpen a new window.\nOther buttons.\nA view that adds padding to its content.\nA padding of a rectangle.\nA paint that can be used to fill or stroke a shape.\nA view that draws something.\nA color palette.\nA font loaded from a file.\nA pattern that can be used to fill a shape.\nA pattern.\nA view that has separate <code>ViewState</code> from its content.\nContents of a view, in a sequence.\nA point in 2D space.\nThe state of a pointer.\nA pointer button.\nA unique pointer id.\nA pointer left the window.\nA pointer was moved.\nA pointer moved.\nA pointer button was pressed.\nA pointer button was pressed.\nA pointer button was released.\nA pointer button was released.\nA pointer wheel was scrolled.\nA pointer was scrolled.\nThe primary button, usually the left mouse button or the …\nQuit the application.\nAlign the content at the right of the container.\nA convenience trait for rebuilding a <code>View</code>.\nDerive the <code>Rebuild</code> trait.\nA context for rebuilding the view tree.\nA view that handles rebuilds.\nA rectangle defined by its minimum and maximum points.\nThe end of the line is rounded.\nThe lines are joined with a rounded corner.\nSemi-bold font weight (600).\nA sans-serif font family.\nA scrollable view.\nThe secondary button, usually the right mouse button.\nSemi-condensed font stretch.\nSemi-expanded font stretch.\nThe state of a <code>PodSeq</code>.\nA serif font family.\nA collection of fonts.\nWays to fill a shape.\nA 2 dimensional size.\nA slider.\nThe style of a slider.\nA solid color.\nReplaces the destination with the source.\nSource over destination.\nSpace available to lay out a view.\nItems are evenly distributed in the stack, with half-size …\nItems are evenly distributed in the stack, with equal-size …\nItems are evenly distributed in the stack.\nThe end of the line is squared off and extends past the …\nA view that stacks it’s content in a line.\nItems are packed toward the start of the stack.\nItems are packed toward the start of the stack.\nAlign text at the start.\nThe state of a <code>Pod</code>.\nThe state of the sequence.\nThe state of the view, see top-level documentation for …\nItems are stretched to fill the stack.\nProperties of a stroke.\nA trait for styling a value.\nA map of style values.\nThin font weight (100), the thinnest possible.\nAlign the content at the top of the container.\nAlign the content at the top left of the container.\nAlign the content at the top right of the container.\nThe tertiary button, usually the middle mouse button.\nA view that displays text.\nAlignment of a section of text.\nA convenient wrapper around a <code>cosmic_text::Buffer</code>.\nA text input.\nThe style of a text input.\nThe style of a text.\nWrapping of a section of text.\nA view that displays some text when the content is hovered.\nThe style of a tooltip.\nA view that transforms its content.\nA transition.\nA view that creates a trigger around the content.\nThe unbounded size.\nThe unbounded space.\nUltra-condensed font stretch.\nUltra-expanded font stretch.\nView state needs to be updated.\nA 2D vector.\nThe vertical axis.\nA single UI component.\nA sequence of views.\nState associated with a <code>View</code>.\nA window.\nA unique identifier for a window.\nThe window was resized.\nThe window was scaled.\nThe sizing of a window.\nA view that stores some additional data.\nWrap text at the word boundary.\nA view that lays out it’s content in a line wrapping if …\nThe unit x point.\nThe unit x vector.\nThe unit y point.\nThe unit y vector.\nA <code>BorderRadius</code> with zero radius on all corners.\nA <code>BorderWidth</code> with zero width on all borders.\nThe zero point.\nA rectangle with zero area.\nThe zero size.\nThe zero space.\nThe zero vector.\nA view that overlays its content on top of each other.\nThe alpha component of the color.\nGet the alpha component as an 8 bit integer.\nThe accent color.\nThe low emphasis accent color.\nGet whether the view’s active state changed.\nAdd a context.\nAdd a window to the application.\nSet the build callback for after the <code>content</code> is built.\nSet the callback for when an event is emitted.\nThe build callback.\nThe callback after an event is propagated.\nCreate a new <code>Aligned</code> view.\nAlign the content inside the container.\nAligns an item within the given space.\nSet <code>self.align</code>.\nSet <code>self.align</code>.\nSet <code>self.align</code>.\nSet <code>self.align</code>.\nHow to align the content along the cross axis, within each …\nThe horizontal alignment of the text.\nThe horizontal alignment of the text.\nThe horizontal alignment of the text.\nThe vertical alignment of the text.\nThe horizontal alignment of the text.\nThe horizontal alignment of the text.\nHow to align the content along the cross axis.\nThe alignment.\nCreate a new <code>BorderRadius</code> with the same radius on all …\nCreate a new <code>BorderWidth</code> with the same width on all …\nCreate a new <code>Padding</code> with the same value for all sides.\nCreate a new point with the same x and y.\nCreate a new size with the same width and height.\nCreate a new vector with the same x and y.\nSet <code>self.alpha_color</code>.\nThe color of the alpha slider.\nThe color of the alpha slider.\nWhether the alt key is held down.\nGet the angle of the vector.\nGet the angle between self and other.\nCreate a new <code>Animate</code>.\nRequest an animation frame.\nRequest an animation frame.\nRequest an animation frame.\nThe animation callback.\nWhether the paint should be anti-aliased.\nCreate a new <code>BoxedView</code>.\nCheck if any modifiers are held down.\nCreate a new <code>Stack</code>, with dynamic content.\nCreate a new <code>Wrap</code>, with dynamic content.\nCreate a new horizontal <code>Stack</code>, with dynamic content.\nCreate a new vertical <code>Stack</code>, with dynamic content.\nGet the area of the rectangle.\nGet a reference to the underlying <code>Any</code> object.\nRun a function with the given style as the current style.\nGet the digit of the key, if it is a digit.\nConvert the font family to a <code>fontdb::Family</code>.\nGet the unique id as a <code>u64</code>.\nSet <code>self.axis</code>.\nSet <code>self.axis</code>.\nSet <code>self.axis</code>.\nThe axis of the scroll.\nThe axis of the slider.\nThe axis of the slider.\nThe axis of the stack.\nThe axis.\nThe blue component of the color.\nGet the blue component as an 8 bit integer.\nCreate a new <code>Container</code> with background.\nSet <code>self.background</code>.\nSet <code>self.background</code>.\nSet <code>self.background</code>.\nSet <code>self.background</code>.\nThe background color.\nThe background color.\nThe background color.\nThe background color of the header.\nThe background color of the header.\nThe background color.\nThe background color.\nThe background color of the slider.\nThe background color of the slider.\nThe background color of the text.\nThe background color of the text.\nSet the callback for before an event is emitted.\nThe callback before an event is propagated.\nThe blend mode of the paint.\nSet the border width of the bottom edge.\nSet the border width of the bottom edge.\nSet <code>self.border_color</code>.\nSet <code>self.border_color</code>.\nSet <code>self.border_color</code>.\nSet <code>self.border_color</code>.\nSet <code>self.border_color</code>.\nSet <code>self.border_color</code>.\nThe border color of the button.\nThe border color.\nThe border color.\nThe border color.\nThe color of the border of the header.\nThe color of the border of the header.\nThe border color of the color picker.\nThe border color of the color picker.\nThe border color.\nThe border color.\nThe border color of the slider.\nThe border color of the slider.\nThe border color of the text.\nThe border color of the text.\nSet the border width of the left edge.\nSet the border width of the left edge.\nSet <code>self.border_radius</code>.\nSet <code>self.border_radius</code>.\nSet <code>self.border_radius</code>.\nSet <code>self.border_radius</code>.\nSet <code>self.border_radius</code>.\nThe border radius of the button.\nThe border radius.\nThe border radius.\nThe border radius.\nThe border radius of the header.\nThe border radius of the header.\nThe border radius.\nThe border radius.\nThe radius of the scrollbar.\nThe border radius of the slider.\nThe border radius of the slider.\nThe border radius of the text.\nThe border radius of the text.\nSet the border width of the right edge.\nSet the border width of the right edge.\nSet the border width of the top edge.\nSet the border width of the top edge.\nSet <code>self.border_width</code>.\nSet <code>self.border_width</code>.\nSet <code>self.border_width</code>.\nSet <code>self.border_width</code>.\nSet <code>self.border_width</code>.\nSet <code>self.border_width</code>.\nThe border width of the button.\nThe border width.\nThe border width.\nThe border width.\nThe border width of the header.\nThe border width of the header.\nThe border width of the color picker.\nThe border width of the color picker.\nThe border width.\nThe border width.\nThe border width of the slider.\nThe border width of the slider.\nThe border width of the text.\nThe border width of the text.\nCreate a new <code>Aligned</code> view that aligns its content to the …\nGet the bottom center point of the rectangle.\nThe bottom border width.\nThe bottom padding.\nCreate a new <code>Aligned</code> view that aligns its content to the …\nGet the bottom left point of the rectangle.\nThe bottom left corner radius.\nCreate a new <code>Aligned</code> view that aligns its content to the …\nGet the bottom right point of the rectangle.\nThe bottom right corner radius.\nGet the bounds of the curve.\nGet the bounds of the text buffer.\nCalculates the size of a text buffer.\nBuild the sequence state.\nBuild the view state, see top-level documentation for more …\nCreate a new application builder.\nBuild the application.\nSet a value in a style returning the style.\nBuild a pod view.\nBuild the sequence state.\nGet a build context.\nGet a build context.\nAdd a style builder to the application.\nBuild a value in a style.\nCreate a new <code>Button</code>.\nSet <code>self.button</code>.\nThe button of the pointer.\nThe button of the pointer.\nThe button to listen for.\nGet the canvas.\nThe cap of the stroke.\nCeil the point by element.\nCeil self by element.\nCeil the vector by element.\nCreate a new <code>Aligned</code> view that aligns its content to the …\nGet the center point of the rectangle.\nCreate a new rectangle with the given center point and …\nCreate a new <code>Checkbox</code>.\nSet <code>self.checked</code>.\nWhether the checkbox is checked.\nCreate a child context.\nCreate a child context.\nCreate a child context.\nCreate a child context.\nCreate a child context.\nCreate a new <code>Painter</code> view that draws a circle.\nCreate a curve from a cicrle.\nClamp self to the range [min, max] by element.\nClamp the rectangle to the given rectangle.\nClamp self to the range [min, max] by element.\nClamp self to the range [min, max] by element.\nClear the canvas.\nClear the curve, retaining the allocated memory for reuse.\nCreate a new <code>Clickable</code>.\nWhether the button was clicked.\nClose the contour.\nA window was requested to be closed.\nClose a window.\nSend a command.\nTry to get the command as a specific type.\nSpawn a future sending a command when it completes.\nSend a command without waking the event loop.\nThe key that was pressed or released.\nCreate a new <code>Collapsing</code>.\nMultiply the image with a color.\nSet the color of the window.\nSet <code>self.color</code>.\nSet <code>self.color</code>.\nSet <code>self.color</code>.\nSet <code>self.color</code>.\nSet <code>self.color</code>.\nSet <code>self.color</code>.\nThe color of the window.\nThe color of the button.\nThe color of the button.\nThe color of the checkbox.\nThe color of the checkbox.\nThe color of the color picker.\nThe color of the scrollbar.\nThe foreground color of the slider.\nThe foreground color of the slider.\nThe color of the text.\nThe color of the text.\nThe color of the text.\nThe color of the text.\nThe color of the text.\nThe color of text.\nCreate a new <code>ColorPicker</code>.\nSet <code>self.column_gap</code>.\nThe gap between each column.\nCheck if the transition is complete.\nCompute the id for this image data.\nDraw a conic curve to a <code>point</code>, with a control point <code>control</code>…\nCreate a new <code>Constrain</code>ed view, constraining its content to …\nGet the most constraning space between <code>self</code> and `other\nCompute the closest point in the rectangle to the given …\nCreate a new <code>Container</code>.\nCheck if the curve contains a <code>point</code> using the given <code>rule</code>.\nCompute whether the rectangle contains the given point.\nSet <code>self.content</code>.\nThe content.\nThe content.\nThe content view.\nThe content.\nThe content.\nThe content to align.\nThe content.\nThe content.\nThe content.\nThe content to constrain.\nThe content.\nThe content of the dropdown.\nThe content.\nThe content of the view.\nThe content.\nThe content.\nThe content of the stack.\nThe content to display.\nThe content.\nThe content.\nThe content to overlay.\nGet the current style.\nThe contrast color.\nGet the length of the cross product of self and other.\nWhether the control key is held down.\nDraw a cubic bezier curve to a <code>point</code>, with control points <code>a</code>…\nGet the cursor of the view.\nThe danger color.\nThe low emphasis danger color.\nThe default dark palette.\nDarken the color by the given <code>amount</code>.\nGet the pixels.\nGet the pixels mutably.\nConstructs an event at the debug level.\nSet whether the window is decorated.\nWhether the window is decorated.\nSet <code>self.default_open</code>.\nWhether the view is open by default.\nThe delay before the tooltip is displayed.\nThe delay before the tooltip is displayed.\nAdd a delegate to the application.\nThe delta of the pointer.\nThe delta of the pointer.\nCreate a new palette, derived from the given colors.\nDesaturates the color by given <code>amount</code>.\nSet <code>self.descendants</code>.\nWhether the item should be clickable when it’s …\nOnly include the annotated item on desktop platforms.\nCompute the determinant of the matrix.\nGet the difference between two canvases.\nCompute the dot distance between two points.\nGet the dot product of self and other.\nDowngrade the image to a weak reference.\nDraw the view, see top-level documentation for more …\nDraw a pod view.\nSet <code>self.draw</code>.\nThe draw function.\nRasterize a buffer.\nDraw the nth view.\nDraw the nth view.\nDraw a single window, returning the scene if it needs to …\nCreate a new <code>Dropdown</code> view.\nThe duration of the transition.\nBuild the view.\nDraw the view.\nHandle an event.\nCalculate the layout.\nRebuild the view.\nCreate an ease transition with the given <code>duration</code>.\nCreate an ease transition with the given <code>duration</code>.\nThe easing curve.\nCreate a new <code>Painter</code> view that draws an ellipse.\nConstructs an event at the error level.\nEvaluate the easing at <code>t</code> where <code>0 &lt;= t &lt;= 1</code>.\nHandle an event.\nHandle an event, see top-level documentation for more …\nHandle an event for the entire application.\nHandle an event.\nHandle an event for the nth view.\nHandle an event for the nth view.\nCreate a new expanded <code>Flex</code> view.\nExpand the rectangle by the given amount.\nExpand the space by <code>size</code>.\nExtend the style with another style.\nSet the flex value of the view.\nFade the color by the given <code>amount</code>.\nSet <code>self.fancy</code>.\nThe distance of the fancy effect.\nThe distance of the fancy effect.\nFill a curve.\nFill a curve.\nDraw a rectangle.\nGet the filter mode.\nIf self is finite, return self, otherwise return zero. …\nClamp a size to the space.\nSet the sizing to <code>WindowSizing::Content</code>.\nGet the flags of the view.\nCreate a new <code>Flex</code> view.\nGet the flex of the view.\nGet the flex of the view.\nGet the flex of the view.\nGet the flex of the view.\nGet the flex of the view.\nGet the flex of the view.\nThe flex value of the view.\nFloor the point by element.\nFloor self by element.\nFloor the vector by element.\nCreate a new <code>Focus</code>.\nGet whether the view’s focused state changed.\nAdd a font to the application.\nSet <code>self.font_family</code>.\nSet <code>self.font_family</code>.\nThe font family of the text.\nThe font family of the text.\nThe font family of the text.\nThe font family of the text.\nThe font family of the text.\nThe font family of the text.\nSet <code>self.font_size</code>.\nSet <code>self.font_size</code>.\nThe font size of the text.\nThe font size of the text.\nThe font size of the text.\nThe font size of the text.\nThe font size of the text.\nThe font size of the text.\nSet <code>self.font_stretch</code>.\nSet <code>self.font_stretch</code>.\nThe font stretch of the text.\nThe font stretch of the text.\nThe font stretch of the text.\nThe font stretch of the text.\nThe font stretch of the text.\nThe font stretch of the text.\nSet <code>self.font_style</code>.\nSet <code>self.font_style</code>.\nThe font style of the text.\nThe font.into of the text.\nThe font style of the text.\nThe font.into of the text.\nThe font style of the text.\nThe font style of the text.\nThe font system.\nSet <code>self.font_weight</code>.\nSet <code>self.font_weight</code>.\nThe font weight of the text.\nThe font weight of the text.\nThe font weight of the text.\nThe font weight of the text.\nThe font weight of the text.\nThe font weight of the text.\nGet the fractional component by element.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate a new matrix from an angle.\nCreate a new vector from an angle.\nCreate a new pointer id from a hashable value.\nConvert a Linux scancode to a key code.\nCreate a new text buffer from a raw buffer.\nCreate a new matrix from a scale.\nCreate a new space with the same minimum and maximum size.\nCreate a new pointer button from a <code>u16</code>.\nCreate a new pointer id from a <code>u64</code>.\nThe green component of the color.\nGet the green component as an 8 bit integer.\nSet <code>self.gap</code>.\nSet the gap for both the rows and columns.\nThe gap between children.\nGet the clipboard text.\nGet a value from the current style.\nEvaluate the transition curve at <code>t</code>.\nGet a pixel.\nGet the pointer with <code>pointer_id</code>.\nGet the pointer with <code>pointer_id</code> mutably.\nGet a window by id.\nGet a mutable window by id.\nThe glyph cache.\nCreate a new color with the given gray component.\nGet whether a child view was active last call.\nGet whether a child view was focused last call.\nGet whether a child view was hot last call.\nHandle all pending commands.\nGet whether a child view is active.\nGet whether a child view is active.\nGet whether a child view is active.\nGet whether a child view is active.\nGet whether a child view is active.\nWhether any of the views in the sequence are active.\nGet whether the view has an active child.\nGet whether a child view’s active state changed.\nGet whether a child view is focused.\nGet whether a child view is focused.\nGet whether a child view is focused.\nGet whether a child view is focused.\nGet whether a child view is focused.\nGet whether the view has a focused child.\nGet whether a child view’s focused state changed.\nGet whether a child view is hot.\nGet whether a child view is hot.\nGet whether a child view is hot.\nGet whether a child view is hot.\nGet whether a child view is hot.\nGet whether the view has a hot child.\nGet whether a child view’s hot state changed.\nHat the vector.\nThe header.\nThe header of the dropdown.\nCreate a new <code>Constrain</code>ed view, constraining its content to …\nGet the height of the image in pixels.\nGet the height of the rectangle.\nGet the height of the window.\nSet the minimum height.\nThe height.\nCreate a new color, with the given hex string.\nParse a color from a hex string.\nCreate a new horizontal <code>Stack</code>.\nCreate a new horizontal <code>Wrap</code>.\nCreate a new horizontal <code>Wrap</code>, with dynamic content.\nCreate a new horizontal <code>Wrap</code>, with a vector of content.\nGet whether the view’s hot state changed.\nDraw a hoverable layer.\nThe view the pointer is over.\nCreate a new horizontal <code>Scroll</code>.\nCreate a new color, with the given <code>hue</code>, <code>saturation</code> and …\nReturns a new color with the given hue, saturation, …\nCreate a new color, with the given <code>hue</code>, <code>saturation</code>, …\nReturns a new color with the given hue, saturation, …\nCreate a horizontal <code>Stack</code>.\nCreate a horizontal <code>Stack</code>.\nCreate a horizontal <code>Stack</code>, with dynamic content.\nCreate a horizontal <code>Stack</code>, with vector content.\nReturns a new color with the given hue, saturation and …\nReturns a new color with the given hue, saturation, value …\nCreate a horizontal <code>Wrap</code>.\nCreate a horizontal <code>Wrap</code>.\nCreate a horizontal <code>Wrap</code>, with dynamic content.\nCreate a horizontal <code>Wrap</code>, with a vector of content.\nSet the icon of the window.\nThe icon of the window.\nSet <code>self.icon_color</code>.\nThe color of the icon.\nThe color of the icon.\nSet <code>self.icon_size</code>.\nThe size of the icon.\nThe size of the icon.\nGet the id of the view.\nGet the id of the view.\nGet the id of the view.\nGet the id of the view.\nGet the id of the view.\nGet the <code>ImageId</code>.\nGet the id of the view.\nGet the unique identifier of the pointer.\nGet the unique identifier of the window.\nThe unique id of the pointer.\nThe unique id of the pointer.\nThe unique id of the pointer.\nThe unique id of the pointer.\nThe application is idle.\nCalled when the application is idle.\nThe image of the pattern.\nExpand the rectangle to contain the given point.\nLoad a font from a file or directory.\nThe info color.\nConstructs an event at the info level.\nThe low emphasis info color.\nInitialize the application.\nCalled when the application is initialized.\nThe inset of the scrollbar.\nCompute the intersection of the rectangle with the given …\nCheck if the rectangle intersects the given rectangle.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCompute the inverse transformation.\nCompute the inverse of the matrix.\nCheck if the <code>key</code> is pressed.\nGet whether the view is active.\nGet whether the view is active.\nGet whether the view is active.\nGet whether the view is active.\nGet whether the view is active.\nGet whether the view is active.\nCheck if the curve is closed.\nCheck if the event is a command of a specific type.\nCheck if the curve is empty.\nWhether the sequence is empty.\nGet whether the stack is empty.\nGet whether the wrap is empty.\nCheck if the point is finite.\nGet whether the size is finite.\nGet whether the space is finite.\nGet whether the view is flexible.\nGet whether the view is focusable.\nGet whether the view is focused.\nGet whether the view is focused.\nGet whether the view is focused.\nGet whether the view is focused.\nGet whether the view is focused.\nGet whether the view is focused.\nGet whether the view is hot.\nGet whether the view is hot.\nGet whether the view is hot.\nGet whether the view is hot.\nGet whether the view is hot.\nGet whether the view is hot.\nGet whether a specific view is hovered.\nCheck if the point is infinite.\nGet whether the size is infinite.\nGet whether the space is infinite.\nCheck if the point is NaN.\nGet whether <code>button</code> is held down on pointer with <code>pointer_id</code>.\nGet whether a button is pressed.\nReturns true if the alignment is stretch.\nGet whether the view is tight.\nGet whether the view is tight.\nGet whether the view is tight.\nGet whether the view is tight.\nGet whether the view is tight.\nGet whether the view is tight.\nReturns true if the color is translucent.\nReturns true if the color is transparent.\nCheck if the curve is valid.\nGet an iterator over the curve segments.\nThe join of the stroke.\nSet <code>self.justify</code>.\nSet <code>self.justify</code>.\nHow to justify the content along the main axis.\nHow to justify the content along the main axis.\nSet <code>self.justify_cross</code>.\nHow to justify the content along the cross axis.\nA keyboard key was pressed or released.\nThe color of the scrollbar knob.\nGet the last point in the curve.\nDraw a layer.\nDraw a layer.\nLayout the view, see top-level documentation for more …\nLayout the items in a stack container.\nLayout a pod view.\nGet a layout context.\nLayout the nth view.\nLayout the nth view.\nCreate a new <code>Aligned</code> view that aligns its content to the …\nGet the left center point of the rectangle.\nThe left border width.\nThe left padding.\nThe length of the sequence.\nGet the number of verbs in the curve.\nThe length of the sequence.\nGet the number of views in the stack.\nGet the number of views in the wrap.\nGet the length of the vector.\nSet <code>self.length</code>.\nThe length of the slider.\nThe length of the slider.\nGet the length of the vector squared.\nLinearly interpolate between two points.\nThe default light palette.\nBrighten the color by the given <code>amount</code>.\nSet <code>self.lightness_color</code>.\nThe color of the lightness slider.\nThe color of the lightness slider.\nSet <code>self.line_height</code>.\nSet <code>self.line_height</code>.\nThe line height of the text.\nThe line height of the text.\nThe line height of the text.\nThe line height of the text.\nThe line height of the text.\nThe line height of the text.\nDraw a line to a <code>point</code>.\nCreate a linear transition with the given <code>duration</code>.\nCreate a linear transition with the given <code>duration</code>.\nLoads a font from a <code>FontSource</code>.\nLoads the system fonts.\nTransform a point from global space to local space.\nLoosen the space, setting the minimum size to zero.\nLoosen the height, setting the minimum height to zero.\nLoosen the width, setting the minimum width to zero.\nGet the luminocity.\nGet the major component of a pair.\nMark the view as animated.\nMark the view as drawn.\nMark the view as laid out.\nDraw a layer with a mask.\nDraw a layer with a mask.\nThe matrix of the affine transformation.\nGet the max of self and other by element.\nGet the max of self and other by element.\nGet the max of self and other by element.\nThe maximum point of the rectangle.\nMaximum size the view can be.\nGet the maximum radius of the corners.\nGet the largest element of self.\nCreate a new <code>Constrain</code>ed view, constraining its content to …\nSet the maximum height.\nCreate a new <code>Constrain</code>ed view, constraining its content to …\nCreate a new rectangle with the given maximum point and …\nSet the maximum size.\nCreate a new <code>Constrain</code>ed view, constraining its content to …\nSet the maximum width.\nSet whether the window is maximized.\nWhether the window is maximized.\nCreate a new <code>Memo</code>.\nWhether the meta key is held down.\nGet the min of self and other by element.\nGet the min of self and other by element.\nGet the min of self and other by element.\nThe minimum point of the rectangle.\nMinimum size the view can be.\nGet the minimum radius of the corners.\nGet the smallest element of self.\nCreate a new <code>Constrain</code>ed view, constraining its content to …\nSet the minimum height.\nCreate a new <code>Constrain</code>ed view, constraining its content to …\nCreate a new rectangle with the given minimum point and …\nSet the minimum size.\nCreate a new <code>Constrain</code>ed view, constraining its content to …\nSet the minimum width.\nGet the minor component of a pair.\nThe miter limit of the stroke.\nLinearly interpolate between two colors.\nLinearly interpolate between two colors.\nOnly include the annotated item on mobile platforms.\nThe modifiers that were active.\nThe modifiers of the pointer.\nThe modifiers of the pointer.\nThe modifiers of the pointer.\nThe modifiers of the pointer.\nThe modifiers changed.\nModify the image data.\nMove a pointer, returning the movement.\nMove to a <code>point</code>.\nSet <code>self.multiline</code>.\nWhether the input is multi-line.\nPremultiply the image alpha.\nReturns the name of the cursor.\nGet whether the view needs an animation frame.\nGet whether the view needs to be drawn.\nGet whether the view needs to be laid out.\nCreate a new application builder.\nCreate a new clipboard from a backend.\nCreate a new build context.\nCreate a new draw context.\nCreate a new event context.\nCreate a new layout context.\nCreate a new rebuild context.\nCreate a new <code>Animate</code>.\nCreate a new <code>BuildHandler</code>.\nCreate a new <code>DrawHandler</code>.\nCreate a new <code>Focus</code>.\nCreate a new <code>Memo</code>.\nCreate a new opaque view.\nCreate a new <code>RebuildHandler</code>.\nCreate a new <code>Trigger</code>.\nCreate a new <code>WithState</code>.\nCreate a new <code>BorderRadius</code>.\nCreate a new <code>BorderWidth</code>.\nCreate a new canvas.\nCreate a new curve.\nCreate a new <code>CommandProxy</code> channel.\nCreate a new image data.\nCreate a new image.\nCreate a new alignment.\nCreate a new matrix.\nCreate a new <code>Padding</code>.\nCreate a new point.\nCreate a new rectangle with the given minimum and maximum …\nCreate a new size.\nCreate a new space.\nCreate a new vector.\nCreate a new style.\nCreate a new text buffer.\nCreates a new font context.\nCreate a new pod view.\nCreate a new <code>PodSeq</code>.\nCreate a new pointer.\nCreate a new <code>WindowId</code>.\nCreate a new <code>Window</code>.\nCreate a new aligned view.\nCreate a new <code>Button</code>.\nCreate a new <code>Checkbox</code>.\nCreate a new <code>Clickable</code>.\nCreate a new <code>Collapsing</code> view.\nCreate a new <code>ColorPicker</code>.\nCreate a new constrained view.\nCreate a new <code>Container</code>.\nCreate a new dropdown.\nCreate a new <code>EventHandler</code>.\nCreate a new flexible view.\nCreate a new <code>Pad</code> view.\nCreate a new <code>Painter</code> view.\nCreate a new scrollable view.\nCreate a new <code>Slider</code>.\nCreate a new <code>Stack</code>.\nCreate a new text.\nCreate a new text input view.\nCreate a new tooltip view.\nCreate a new <code>Transform</code> view.\nCreate a new <code>Wrap</code>.\nCreate a new overlay view.\nNormalize the vector.\nGet the offset of the padding.\nCreate a new color, with the given <code>hue</code>, <code>saturation</code> and …\nConvert a color from okhsl to sRGB.\nCreate a new color, with the given <code>hue</code>, <code>saturation</code>, …\nConvert a color from okhsl to sRGB.\nCreate a new color, with the given <code>hue</code>, <code>saturation</code> and …\nConvert a color from okhsv to sRGB.\nCreate a new color, with the given <code>hue</code>, <code>saturation</code>, <code>value</code> …\nConvert a color from okhsv to sRGB.\nCreate a new color, with the given <code>lightness</code>, <code>a</code> and <code>b</code> …\nConvert a color from oklab to sRGB.\nCreate a new color, with the given <code>lightness</code>, <code>a</code>, <code>b</code> and …\nConvert a color from oklab to sRGB.\nCreate a new color, with the given <code>lightness</code>, <code>chroma</code> and …\nConvert a color from oklch to sRGB.\nCreate a new color, with the given <code>lightness</code>, <code>chroma</code>, <code>hue</code> …\nConvert a color from oklch to sRGB.\nCreate a new <code>BuildHandler</code>.\nCreate a new <code>Clickable</code>, with an <code>on_click</code> callback.\nSet the callback for when the button is clicked.\nThe callback for when the button is clicked.\nCreate a new <code>DrawHandler</code>.\nSet the draw callback.\nThe draw callback.\nCreate a new <code>EventHandler</code>, with an after callback.\nCreate a new <code>EventHandler</code>, with a before callback.\nSet the on_input callback.\nSet the callback for when the value changes.\nSet the callback that is called when an input is received.\nThe on_input callback.\nThe callback for when the value changes.\nA callback that is called when an input is received.\nSet a callback for when the view is opened or closed.\nA callback for when the view is opened or closed.\nCreate a new <code>Clickable</code>, with an <code>on_press</code> callback.\nSet the callback for when the button is pressed.\nThe callback for when the button is pressed.\nCreate a new <code>RebuildHandler</code>.\nCreate a new <code>Clickable</code>, with an <code>on_release</code> callback.\nSet the callback for when the button is released.\nThe callback for when the button is released.\nSet the callback that is called when the input is …\nA callback that is called when the input is submitted.\nThe opacity of the pattern.\nA view that bridges the gap between <code>impl View</code> and …\nSet <code>self.open</code>.\nWhether the view is open.\nConvenience method to open a window with a view.\nAdd a window to the application.\nCreate a curve from an oval.\nDraw an overlay, at <code>index</code>.\nDraw an overlay.\nPack a major and minor component into a pair.\nCreate a new <code>Pad</code> view.\nCreate a new <code>Pad</code> view adding padding to the bottom.\nCreate a new <code>Pad</code> view adding padding to the left.\nCreate a new <code>Pad</code> view adding padding to the right.\nCreate a new <code>Pad</code> view adding padding to the top.\nSet <code>self.padding</code>.\nThe padding of the button.\nThe padding.\nThe padding.\nThe padding of the tooltip.\nThe padding of the text.\nCreate a new <code>Painter</code> view.\nGet the palette of the style.\nGet the palette of the style.\nGet the size of the window in physical pixels.\nSet <code>self.placeholder</code>.\nPlaceholder text to display when the input is empty.\nSet <code>self.placeholder_color</code>.\nThe color of the placeholder text.\nThe color of the placeholder text.\nCreate a new <code>Pod</code> view.\nA pointer button was pressed or released.\nA pointer left the window.\nA pointer moved.\nA pointer scrolled.\nGet the pointers in the window.\nGet the pointers in the window mutably.\nGet the points in the curve.\nThe position of the pointer.\nThe position of the pointer.\nThe position of the pointer.\nThe position of the pointer.\nThe position of the pointer.\nPremultiply the image alpha, returning a new image.\nPrepare the view.\nPress a button.\nPress a button on a pointer.\nThe primary color.\nThe low emphasis primary color.\nCount the number of primitives.\nGet the primitives of the canvas.\nPropagate the state of a child view.\nPush a view to the stack.\nPush a view to the wrap.\nPush an oval to the curve.\nPush a rectangle to the curve.\nPush the border of a rectangle with rounded corners to the …\nPush a rectangle with rounded corners to the curve.\nDraw a rectangle with rounded corners and a border.\nDraw a quadratic bezier curve to a <code>point</code>, with a control …\nQuit the application.\nThe red component of the color.\nGet the red component as an 8 bit integer.\nSet <code>self.range</code>.\nThe range of the slider.\nGet the raw buffer.\nGet the raw buffer mutably.\nRebuild the view.\nRebuild the sequence state.\nRebuild the view state, see top-level documentation for …\nRebuild all windows.\nRebuild a pod view.\nRebuild the sequence state.\nThe callback for when a rebuild is requested.\nGet a rebuild context.\nRebuild the nth view.\nRebuild the nth view.\nCreate a new <code>Painter</code> view that draws a rectangle.\nGet the rect of the view in local space.\nGet the rect of the view in local space.\nGet the rect of the view in local space.\nDraw a rectangle.\nCreate a curve from a rectangle.\nGet the rect of the text buffer.\nGet the rect of the view in local coordinates.\nRelease a button, returning whether the button was clicked.\nRelease a button on a pointer.\nRemove a pointer.\nRemove a window from the application.\nRequest an animation frame of the view tree.\nRequest a draw of the view tree.\nRequest a draw of the view tree.\nRequest a draw of the view tree.\nRequest a draw of the view tree.\nRequest a layout of the view tree.\nRequest a layout of the view tree.\nRequest a layout of the view tree.\nRequest a layout of the view tree.\nRequest a rebuild of the view tree.\nRequest a rebuild of the view tree.\nSet whether the window is resizable.\nWhether the window is resizable.\nCreate a new color, with the given <code>red</code>, <code>green</code> and <code>blue</code> …\nCreate a new color with the given red, green and blue …\nCreate a new color, with the given <code>red</code>, <code>green</code>, <code>blue</code> and …\nCreate a new color with the given red, green, blue and …\nCreate a new color with the given red, green, blue and …\nCreate a new <code>Aligned</code> view that aligns its content to the …\nGet the right center point of the rectangle.\nThe right border width.\nThe right padding.\nCreate a new <code>Transform</code> view that rotates its content.\nDraw a layer with a rotation.\nCreate a rotation.\nCreate a new <code>Transform</code> view that rotates its content in …\nRound the translation.\nRound the point by element.\nRound the rectangle’s minimum point down and its maximum …\nRound self by element.\nRound the vector by element.\nSet <code>self.row_gap</code>.\nThe gap between each row.\nSaturates the color by given <code>amount</code>.\nCreate a new <code>Transform</code> view that scales its content.\nCreate a scale.\nSet the scale of the window.\nThe scale of the window.\nThe secondary color.\nThe low emphasis secondary color.\nSet the clipboard text.\nSet a value in a style.\nSet whether the view is active.\nSet whether the view is active.\nSet whether the view is active.\nSet whether the view is active.\nSet the align of the text buffer.\nSet the bounds of the text buffer.\nSet the cursor of the view.\nSet the cursor of the view.\nSet the cursor of the view.\nSet the cursor of the view.\nSet the filter mode.\nSet the flex of the view.\nSet the flex of the view.\nSet the flex of the view.\nSet the flex of the view.\nSet whether the view is focusable.\nSet whether the view is focused.\nSet whether the view is focused.\nSet whether the view is focused.\nSet whether the view is focused.\nSet whether the view is hot.\nSet whether the view is hot.\nSet whether the view is hot.\nSet whether the view is hot.\nSet the metrics of the text buffer.\nSet a pixel.\nSet the size of the view.\nSet the text of the text buffer.\nSet whether the view is tight.\nSet whether the view is tight.\nSet whether the view is tight.\nSet whether the view is tight.\nSet the transform of the view.\nSet the wrapping mode of the text buffer.\nThe shader of the paint.\nWhether the shift key is held down.\nShrink the rectangle by the given amount.\nShrink the space by <code>size</code>.\nGet the absolute value of the vector.\nCreate a new <code>Constrain</code>ed view, cosntraining its content to …\nGet the size of the view.\nGet the size of the view.\nGet the size of the view.\nGet the size of the image in pixels.\nGet the size of the padding.\nGet the size of the rectangle.\nGet the size of the text buffer.\nGet the size of the view.\nSet the size of the window.\nSet <code>self.size</code>.\nSet <code>self.size</code>.\nSet <code>self.size</code>.\nThe size of the window.\nThe size of the checkbox.\nThe size of the checkbox.\nThe size of the color picker.\nThe size of the color picker.\nThe size of the view.\nSet the sizing of the window.\nThe sizing of the window.\nCreate a new <code>Slider</code>.\nSet <code>self.slider_width</code>.\nThe width of the sliders.\nThe width of the sliders.\nGet a snapshot of the current style.\nGet the <code>WindowSnapshot</code> of the window.\nThe space to constrain the content to.\nSpawn a future that is polled when commands are handled.\nStep the transition.\nStroke a curve.\nStroke a curve.\nSet <code>self.stroke</code>.\nThe stroke width of the checkbox.\nThe stroke width of the checkbox.\nStroke the <code>curve</code> with the given <code>stroke</code>.\nGet a value from the current style.\nAdd a style to the application.\nGet a value from the current style or a default value.\nRun a closure with the given style.\nStyle a value.\nCreate a new <code>Button</code> with a style.\nCreate a new <code>Checkbox</code> with a style.\nCreate a new <code>Collapsing</code> view with a style.\nCreate a new <code>ColorPicker</code> with the given style.\nCreate a new <code>Container</code> with a style.\nCreate a new <code>Slider</code> with a style.\nCreate a new text with a style.\nCreate a new text input view with a style.\nCreate a new tooltip view with a style.\nThe success color.\nThe low emphasis success color.\nThe surface color.\nThe high emphasis surface color.\nThe higher emphasis surface color.\nThe highest emphasis surface color.\nThe low emphasis surface color.\nThe lower emphasis surface color.\nThe swash cache.\nTake all pending requests.\nCreate a new <code>Text</code>.\nDraw a text buffer.\nSet <code>self.text</code>.\nSet the text of the input.\nThe text that was entered.\nThe text.\nThe text.\nThe text to display.\nCreate a formatted <code>Text</code>.\nCreate a new <code>TextInput</code>.\nDraw a raw text buffer.\nWhether the view is tight.\nSet the title of the window.\nThe title of the window.\nConvert the text align to a <code>cosmic_text::Align</code>.\nConvert the text wrap to a <code>cosmic_text::Wrap</code>.\nConvert the font weight to a <code>fontdb::Weight</code>.\nConvert the font stretch to a <code>fontdb::Stretch</code>.\nConvert the font style to a <code>fontdb::Style</code>.\nConvert the color to hex.\nConvert the color to a hue, saturation, lightness tuple.\nConvert the color to a hue, saturation, lightness and …\nConvert the color to a hue, saturation, value tuple.\nConvert the color to a hue, saturation, value and alpha …\nConvert a color from sRGB to okhsl.\nConvert a color from sRGB to okhsl.\nConvert a color from sRGB to okhsv.\nConvert a color from sRGB to okhsv.\nConvert a color from sRGB to oklab.\nConvert a color from sRGB to oklab.\nConvert a color from sRGB to oklch.\nConvert a color from sRGB to oklch.\nConvert the size to a vector.\nConvert the vector to a vector.\nConvert the color to linear sRGB.\nConvert the point to a size.\nConvert the vector to a size.\nConvert the color to linear sRGB.\nConvert the point to a vector.\nConvert the size to a vector.\nSet whether the dropdown is toggled.\nWhether the dropdown is toggled.\nCreate a new <code>Tooltip</code> view.\nCreate a new <code>Aligned</code> view that aligns its content to the …\nGet the top center point of the rectangle.\nThe top border width.\nThe top padding.\nCreate a new <code>Aligned</code> view that aligns its content to the …\nGet the top left point of the rectangle.\nThe top left corner radius.\nCreate a new <code>Aligned</code> view that aligns its content to the …\nGet the top right point of the rectangle.\nThe top right corner radius.\nConstructs an event at the trace level.\nCreate a new <code>Transform</code> view.\nGet the transform of the view.\nGet the transform of the view.\nDraw a layer with a transformation.")