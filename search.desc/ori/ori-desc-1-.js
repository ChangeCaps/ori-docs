searchState.loadedDescShard("ori", 1, "The transition of the scrollbar.\nThe style of <code>Scroll::transition</code>.\nAnimate a view when active changes.\nAnimate a view when focused changes.\nAnimate a view when hovered changes.\nCreate a new <code>Transform</code> view that translates its content.\nCrate a translation.\nTranslate the transform of the view.\nDraw a layer with a translation.\nDraw a layer with a translation.\nThe translation of the affine transformation.\nCreate a new <code>Trigger</code> view.\nDraw a trigger rectangle.\nDraw a trigger rectangle.\nTry to parse a color from a hex string.\nCompute the intersection of the rectangle with the given …\nCreate a new constrained view, with no bounds.\nCompute the union of the rectangle with the given …\nUnpack a pair into it’s (major, minor) components.\nGet the <code>Update</code> of the view.\nUpdate the hovered state of a window.\nUpdate the window.\nCreate a style value.\nSet <code>self.value</code>.\nThe value of the slider.\nCreate a new <code>Stack</code>, with vector content.\nCreate a new <code>Wrap</code>, with a vector of content.\nCreate a new horizontal <code>Stack</code>, with vector content.\nCreate a new vertical <code>Stack</code>, with vector content.\nGet the verbs in the curve.\nCreate a new vertical <code>Stack</code>.\nCreate a new vertical <code>Wrap</code>.\nCreate a new vertical <code>Wrap</code>, with dynamic content.\nCreate a new vertical <code>Wrap</code>, with a vector of content.\nGet the view at a point.\nSet whether the window is visible.\nWhether the window is visible.\nCreate a new vertical <code>Scroll</code>.\nCreate a vertical <code>Stack</code>.\nCreate a vertical <code>Stack</code>.\nCreate a vertical <code>Stack</code>, with dynamic content.\nCreate a vertical <code>Stack</code>, with vector content.\nCreate a vertical <code>Wrap</code>.\nCreate a vertical <code>Wrap</code>.\nCreate a vertical <code>Wrap</code>, with dynamic content.\nCreate a vertical <code>Wrap</code>, with a vector of content.\nWake the event loop.\nConstructs an event at the warn level.\nThe warning color.\nGet whether the view was active last call.\nGet whether the view was focused last call.\nGet whether the view was hovered last call.\nOnly include the annotated item on web platforms.\nCreate a new <code>Constrain</code>ed view, constraining its content to …\nGet the width of the image in pixels.\nGet the width of the rectangle.\nGet the width of the window.\nSet the minimum width.\nSet <code>self.width</code>.\nSet <code>self.width</code>.\nThe width of the stroke.\nThe width.\nThe width of the scrollbar.\nThe style of <code>Scroll::width</code>.\nThe width of the slider.\nThe style of <code>Slider::width</code>.\nAdd a window to the application.\nGet the window.\nGet the window.\nGet the window.\nGet the window.\nGet the window.\nThe window that wants to close.\nHandle an event for a single window.\nThe maximized state of a window changed.\nGet the window mutably.\nGet the window mutably.\nGet the window mutably.\nGet the window mutably.\nGet the window mutably.\nA window was resized.\nA window was scaled.\nInsert a style key.\nPush a view to the stack.\nPush a view to the wrap.\nCreate a new <code>WithState</code> that replaces the data with the …\nCreate a new <code>WithState</code> that replaces the data with the …\nCreate a new <code>WithState</code>.\nCreate a new <code>WithState</code> using <code>S::default()</code>.\nCreate a view that applies a style to its content.\nInsert a style key.\nInsert a styled value.\nCreate a new view unwrapping some data from the state.\nCreate a new view unwrapping some state from the data.\nSet <code>self.wrap</code>.\nSet <code>self.wrap</code>.\nThe text wrap of the text.\nThe style of <code>Text::wrap</code>.\nThe text wrap of the text.\nThe style of <code>TextInput::wrap</code>.\nThe text wrap of the text.\nThe style of <code>Tooltip::wrap</code>.\nThe horizontal alignment.\nThe x axis of the matrix.\nThe x coordinate.\nThe x coordinate.\nThe vertical alignment.\nThe y axis of the matrix.\nThe y coordinate.\nThe y coordinate.\nCreate a new <code>ZStack</code> view.\nCreate a new <code>ZStack</code> view.\nA derived style.\nA style.\nA style key.\nA styled value.\nA collection of styles.\nA theme.\nA value.\nThe accent color.\nThe background color.\nCreate a computed style.\nThe contrast color.\nThe danger color.\nHash a style key.\nThe info color.\nCreate a style key.\nThe outline color.\nThe primary color.\nThe secondary color.\nThe success color.\nThe surface color.\nCreate a style value.\nThe warning color.")